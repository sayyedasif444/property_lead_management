{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js","views/auth-views/components/LoginForm.js","views/auth-views/authentication/login-1/index.js","views/auth-views/authentication/login/index.js"],"names":["LockOutlined","props","ref","React","AntdIcon","_objectSpread","icon","LockOutlinedSvg","displayName","connect","state","isAuthenticated","auth","isError","errMessage","isErrorType","isMainLoading","loading","isOtp","login","onLogin","values","a","setloadingButton","store","dispatch","type","SET_LOADING_FALSE","email","password","useEffect","useState","loadingButton","setAuthToken","sessionStorage","token","to","div","initial","opacity","marginBottom","animate","className","showIcon","message","layout","name","onFinish","Item","label","rules","required","getFieldValue","validator","rule","value","test","Promise","reject","resolve","prefix","MailOutlined","Password","htmlType","block","backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","LoginOne","useSelector","theme","currentTheme","style","justify","xs","sm","md","lg","background","src","alt","height","Login","allowRedirect"],"mappings":"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","file":"static/js/21.ddf6fd51.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\n\nLockOutlined.displayName = 'LockOutlined';\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Form, Input, Alert } from 'antd';\r\nimport { MailOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { login } from '../../../apis/login/auth';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport store from '../../../redux/store';\r\nimport { SET_LOADING_FALSE } from '../../../actions/types';\r\nimport setAuthToken from '../../../utils/setAuthToken';\r\n\r\nexport const LoginForm = ({\r\n  login,\r\n  isAuthenticated,\r\n  errMessage,\r\n  isError,\r\n  isErrorType,\r\n  isOtp,\r\n  isMainLoading,\r\n}) => {\r\n  const onLogin = async (values) => {\r\n    setloadingButton(true);\r\n    store.dispatch({ type: SET_LOADING_FALSE });\r\n    await login(values.email, values.password);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isError) {\r\n      setloadingButton(false);\r\n    }\r\n  }, [isError, isErrorType]);\r\n\r\n  const [loadingButton, setloadingButton] = useState(false);\r\n\r\n  if (isAuthenticated) {\r\n    setAuthToken(sessionStorage.token);\r\n    return <Redirect to='/app' />;\r\n  } else {\r\n    store.dispatch({ type: SET_LOADING_FALSE });\r\n  }\r\n  return (\r\n    <>\r\n      <motion.div\r\n        initial={{ opacity: 0, marginBottom: 0 }}\r\n        animate={{\r\n          opacity: isError ? 1 : 0,\r\n          marginBottom: isError ? 20 : 0,\r\n        }}\r\n        className='pt-2 '\r\n      >\r\n        {isError && isErrorType === 'LOGIN' && (\r\n          <Alert type='error' showIcon message={errMessage}></Alert>\r\n        )}\r\n      </motion.div>\r\n      <Form\r\n        layout='vertical'\r\n        name='login-form'\r\n        className='text-white'\r\n        onFinish={onLogin}\r\n      >\r\n        <Form.Item\r\n          name='email'\r\n          label={<span className='text-white'>Email</span>}\r\n          className='mb-2'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your email',\r\n            },\r\n            {\r\n              type: 'email',\r\n              message: 'Please enter a validate email!',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (value) {\r\n                  var format =\r\n                    /(\\W*(<script)\\W*)|(\\W*(javascript)\\W*)|(\\W*(jquery)\\W*)|(\\W*(console.)\\W*)|(\\W*(<)\\W*)|(\\W*(>)\\W*)/;\r\n                  if (format.test(value)) {\r\n                    return Promise.reject(\r\n                      'Restricted character/word(s) detected.'\r\n                    );\r\n                  }\r\n                  return Promise.resolve();\r\n                } else {\r\n                  return Promise.resolve();\r\n                }\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input prefix={<MailOutlined className='text-primary' />} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='password'\r\n          className='text-white mb-4'\r\n          label={\r\n            <div className={``}>\r\n              <span className='text-white'>Password</span>\r\n            </div>\r\n          }\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your password',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (value) {\r\n                  var format =\r\n                    /(\\W*(<script)\\W*)|(\\W*(javascript)\\W*)|(\\W*(jquery)\\W*)|(\\W*(console.)\\W*)|(\\W*(<)\\W*)|(\\W*(>)\\W*)/;\r\n                  if (format.test(value)) {\r\n                    return Promise.reject(\r\n                      'Restricted character/word(s) detected.'\r\n                    );\r\n                  }\r\n                  return Promise.resolve();\r\n                } else {\r\n                  return Promise.resolve();\r\n                }\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password prefix={<LockOutlined className='text-primary' />} />\r\n        </Form.Item>\r\n        <Form.Item className='mb-2 mt-3'>\r\n          <Button\r\n            type='default'\r\n            htmlType='submit'\r\n            block\r\n            loading={loadingButton}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </Form.Item>\r\n        <p className='text-right text-white'>\r\n          <Link to='/auth/forgot-password' className='text-white'>\r\n            Forgot Password\r\n          </Link>\r\n        </p>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  isErrorType: PropTypes.string,\r\n  isMainLoading: PropTypes.bool,\r\n  isOtp: PropTypes.bool,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isError: state.auth.isError,\r\n  errMessage: state.auth.errMessage,\r\n  isErrorType: state.auth.isErrorType,\r\n  isMainLoading: state.auth.loading,\r\n  isOtp: state.auth.isOtp,\r\n});\r\nexport default connect(mapStateToProps, { login })(LoginForm);\r\n","import React from 'react';\r\nimport LoginForm from '../../components/LoginForm';\r\nimport { Card, Row, Col } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst backgroundStyle = {\r\n  backgroundImage: '',\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundSize: 'cover',\r\n};\r\n\r\nconst LoginOne = (props) => {\r\n  const theme = useSelector((state) => state.theme.currentTheme);\r\n  return (\r\n    <div className='h-100' style={backgroundStyle}>\r\n      <div className='container d-flex flex-column justify-content-center h-100'>\r\n        <Row justify='center'>\r\n          <Col xs={24} sm={24} md={24} lg={9}>\r\n            <Card className='shadow' style={{ background: '#1245A8' }}>\r\n              <div className='my-4'>\r\n                <div className='text-center mb-3'>\r\n                  <img\r\n                    className='img-fluid'\r\n                    src={`/img/${\r\n                      theme === 'light' ? 'logo-white.png' : 'logo-white.png'\r\n                    }`}\r\n                    alt=''\r\n                    style={{ height: '70px' }}\r\n                  />\r\n                  \r\n                  {/* <p>\r\n                    Don't have an account yet?{' '}\r\n                    <a href='/auth/register-1'>Sign Up</a>\r\n                  </p> */}\r\n                </div>\r\n                <Row justify='center'>\r\n                  <Col xs={24} sm={24} md={20} lg={20}>\r\n                    <LoginForm {...props} />\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginOne;\r\n","import React from 'react';\r\nimport LoginOne from '../login-1';\r\n\r\nconst Login = () => {\r\n  return <LoginOne allowRedirect={true} />;\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}