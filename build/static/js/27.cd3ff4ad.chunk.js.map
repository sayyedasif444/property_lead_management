{"version":3,"sources":["apis/dashboard/User.js","apis/dashboard/Meeting.js","views/app-views/Meeting/addUser.js","views/app-views/Meeting/editUser.js","views/app-views/Meeting/editPassword.js","views/app-views/Meeting/index.js"],"names":["userAlet","listUser","dispatch","a","type","LOADING_LIST_USER","payload","config","body","axios","method","url","BACKEND_URL","data","headers","then","response","statuscode","LIST_USER_DATA","catch","error","addUser","SET_ALERT_USER","isError","isErrorType","errMessage","message","clearTimeout","setTimeout","editUser","flag","listSingleUser","id","passwordUpdate","passwordUpdateAdmin","deleteUser","SINGLE_SELF_USER","listMeeting","LOADING_LIST_MEETING","LIST_MEETING_DATA","connect","state","meeting","singleData","addMeeting","SET_ALERT_MEETING","visible","cancel","Form","useForm","form","useEffect","resetFields","title","centered","footer","width","destroyOnClose","onCancel","e","layout","name","preserve","onFinish","values","gutter","span","Item","style","label","rules","required","format","placeholder","TextArea","className","htmlType","editMeeting","Object","keys","length","setFieldsValue","i_date","moment","Date","substring","i_time","description","meeting_point","task","user","useState","text","status","tasklist","settasklist","JSON","parse","bodyStyle","padding","listStyle","paddingLeft","map","ele","index","CheckCircleOutlined","ExclamationCircleOutlined","hasOwnProperty","reason","loading","isAuthenticated","auth","deleteMeeting","modalVisible","setModalVisible","modalVisibleedit","setModalVisibleedit","modalVisibleeditPass","setModalVisibleeditPass","searchData","setsearchData","search","setsearch","dateSelected","setdateSelected","success","result","filter","item","toLowerCase","indexOf","sm","md","lg","value","onChange","target","icon","PlusCircleOutlined","onClick","cursor","preventDefault","store","SET_SIGNLE_MEETING","first_name","last_name","parseInt","sessionStorage","getItem","onConfirm","stopPropagation","okText","cancelText","DeleteOutlined"],"mappings":"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","file":"static/js/27.cd3ff4ad.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_USER_DATA,\r\n  LOADING_LIST_USER,\r\n  SET_ALERT_USER,\r\n  SINGLE_SELF_USER,\r\n} from '../../actions/types';\r\n\r\nexport const listUser = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_USER, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/list-user',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_USER, payload: false });\r\n        dispatch({ type: LIST_USER_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_USER, payload: false });\r\n        dispatch({ type: LIST_USER_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_USER, payload: false });\r\n      dispatch({ type: LIST_USER_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nlet userAlet;\r\nexport const addUser = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/add-user',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listUser());\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editUser =\r\n  (data, flag = false) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    const body = data;\r\n    await axios({\r\n      method: 'POST',\r\n      url: BACKEND_URL + 'user/edit-user',\r\n      data: body,\r\n      headers: config,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.statuscode === 200) {\r\n          if (flag) {\r\n            dispatch(listSingleUser(data.id));\r\n          } else {\r\n            dispatch(listUser());\r\n          }\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: true,\r\n              isErrorType: 'SUCCESS',\r\n              errMessage: response.data.message,\r\n            },\r\n          });\r\n          clearTimeout(userAlet);\r\n          userAlet = setTimeout(() => {\r\n            dispatch({\r\n              type: SET_ALERT_USER,\r\n              payload: {\r\n                isError: false,\r\n                isErrorType: null,\r\n                errMessage: null,\r\n              },\r\n            });\r\n          }, 1000);\r\n        } else {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: true,\r\n              isErrorType: 'FAIL',\r\n              errMessage: response.data.message,\r\n            },\r\n          });\r\n          clearTimeout(userAlet);\r\n          userAlet = setTimeout(() => {\r\n            dispatch({\r\n              type: SET_ALERT_USER,\r\n              payload: {\r\n                isError: false,\r\n                isErrorType: null,\r\n                errMessage: null,\r\n              },\r\n            });\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: 'Something went wrong! Please try again later',\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      });\r\n  };\r\n\r\nexport const passwordUpdate = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/update-password',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const passwordUpdateAdmin = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/update-password-admin',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const deleteUser = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/delete-user',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listUser());\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const listSingleUser = (id) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { id: id };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/list-user-by-id',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: SINGLE_SELF_USER, payload: response.data.data });\r\n      }\r\n    })\r\n    .catch((error) => {});\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_MEETING_DATA,\r\n  LOADING_LIST_MEETING,\r\n  SET_ALERT_MEETING,\r\n} from '../../actions/types';\r\n\r\nexport const listMeeting = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_MEETING, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'meeting/list-meeting',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_MEETING, payload: false });\r\n        dispatch({ type: LIST_MEETING_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_MEETING, payload: false });\r\n        dispatch({ type: LIST_MEETING_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_MEETING, payload: false });\r\n      dispatch({ type: LIST_MEETING_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nlet userAlet;\r\nexport const addMeeting = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'meeting/add-meeting',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listMeeting());\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_MEETING,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editMeeting = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'meeting/edit-meeting',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listMeeting());\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_MEETING,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const deleteMeeting = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'meeting/delete-meeting',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listMeeting());\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_MEETING,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addMeeting } from '../../../apis/dashboard/Meeting';\r\n\r\nconst AddUser = ({\r\n  visible,\r\n  cancel,\r\n  errMessage,\r\n  isError,\r\n  isErrorType,\r\n  addMeeting,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onSubmit = (values) => {\r\n    addMeeting(values);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isError && isErrorType === 'SUCCESS') {\r\n      setTimeout(() => {\r\n        cancel(false);\r\n        form.resetFields();\r\n      }, 1000);\r\n    }\r\n  }, [isError, isErrorType, errMessage, form, cancel]);\r\n\r\n  return (\r\n    <Modal\r\n      title='Create Meeting'\r\n      visible={visible}\r\n      centered\r\n      footer={null}\r\n      width={700}\r\n      destroyOnClose={true}\r\n      onCancel={(e) => cancel(false)}\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout='vertical'\r\n        name='new-company'\r\n        preserve={false}\r\n        onFinish={onSubmit}\r\n      >\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              name='i_date'\r\n              style={{ width: '100%' }}\r\n              label={<span>Date</span>}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: `Please input Date`,\r\n                },\r\n              ]}\r\n            >\r\n              <DatePicker style={{ width: '100%' }} format={'DD-MM-YYYY'} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              name='i_time'\r\n              style={{ width: '100%' }}\r\n              label={<span>Time</span>}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: `Please input Source`,\r\n                },\r\n              ]}\r\n            >\r\n              <TimePicker style={{ width: '100%' }} format='HH:mm' />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name='title'\r\n              style={{ width: '100%' }}\r\n              label={<span>Title</span>}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: `Please input Title`,\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder='Title' />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name='meeting_point'\r\n              style={{ width: '100%' }}\r\n              label={<span>Meeting Point</span>}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: `Please input Meeting Point`,\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder='Meeting Point' />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name='description'\r\n              label={<span>Descripiton</span>}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: `Please input Descripiton`,\r\n                },\r\n              ]}\r\n            >\r\n              <Input.TextArea type='text' placeholder='Descripiton' />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Form.Item className='text-right mb-0'>\r\n          <Button type='primary' htmlType='submit'>\r\n            Save\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nAddUser.propTypes = {\r\n  addMeeting: PropTypes.any,\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  isErrorType: PropTypes.string,\r\n  singleData: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isError: state.meeting.isError,\r\n  errMessage: state.meeting.errMessage,\r\n  isErrorType: state.meeting.isErrorType,\r\n  singleData: state.meeting.singleData,\r\n});\r\nexport default connect(mapStateToProps, { addMeeting })(AddUser);\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Button,\r\n  DatePicker,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { editMeeting } from '../../../apis/dashboard/Meeting';\r\n\r\nconst AddUser = ({\r\n  visible,\r\n  cancel,\r\n  errMessage,\r\n  isError,\r\n  isErrorType,\r\n  editMeeting,\r\n  singleData,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onSubmit = (values) => {\r\n    values.id = singleData.id;\r\n    editMeeting(values);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(singleData).length > 0 && visible) {\r\n      form.setFieldsValue({\r\n        i_date:\r\n          singleData.i_date !== null\r\n            ? moment(new Date(singleData.i_date.substring(0, 10)))\r\n            : '',\r\n        i_time: singleData.i_time !== null ? moment(singleData.i_time) : '',\r\n        description:\r\n          singleData.description !== null ? singleData.description : '',\r\n        title: singleData.title !== null ? singleData.title : '',\r\n        meeting_point:\r\n          singleData.meeting_point !== null ? singleData.meeting_point : '',\r\n      });\r\n    }\r\n  }, [singleData, form, visible]);\r\n\r\n  useEffect(() => {\r\n    if (isError && isErrorType === 'SUCCESS') {\r\n      setTimeout(() => {\r\n        cancel(false);\r\n        form.resetFields();\r\n      }, 1000);\r\n    }\r\n  }, [isError, isErrorType, errMessage, form, cancel]);\r\n\r\n  return (\r\n    <Modal\r\n      title='Edit Meeting'\r\n      visible={visible}\r\n      centered\r\n      footer={null}\r\n      width={700}\r\n      destroyOnClose={true}\r\n      onCancel={(e) => cancel(false)}\r\n    >\r\n      <Form\r\n        form={form}\r\n        layout='vertical'\r\n        name='new-company'\r\n        preserve={false}\r\n        onFinish={onSubmit}\r\n      >\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              name='i_date'\r\n              style={{ width: '100%' }}\r\n              label={<span>Date</span>}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: `Please input Date`,\r\n                },\r\n              ]}\r\n            >\r\n              <DatePicker style={{ width: '100%' }} format={'DD-MM-YYYY'} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              name='i_time'\r\n              style={{ width: '100%' }}\r\n              label={<span>Time</span>}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: `Please input Source`,\r\n                },\r\n              ]}\r\n            >\r\n              <TimePicker style={{ width: '100%' }} format='HH:mm' />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name='title'\r\n              style={{ width: '100%' }}\r\n              label={<span>Title</span>}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: `Please input Title`,\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder='Title' />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name='meeting_point'\r\n              style={{ width: '100%' }}\r\n              label={<span>Meeting Point</span>}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: `Please input Meeting Point`,\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder='Meeting Point' />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name='description'\r\n              label={<span>Descripiton</span>}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: `Please input Descripiton`,\r\n                },\r\n              ]}\r\n            >\r\n              <Input.TextArea type='text' placeholder='Descripiton' />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Form.Item className='text-right mb-0'>\r\n          <Button type='primary' htmlType='submit'>\r\n            Save\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nAddUser.propTypes = {\r\n  editMeeting: PropTypes.any,\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  isErrorType: PropTypes.string,\r\n  singleData: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isError: state.meeting.isError,\r\n  errMessage: state.meeting.errMessage,\r\n  isErrorType: state.meeting.isErrorType,\r\n  singleData: state.meeting.singleData,\r\n});\r\nexport default connect(mapStateToProps, { editMeeting })(AddUser);\r\n","import React, { useEffect } from 'react';\r\nimport { Modal } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport {\r\n  ExclamationCircleOutlined,\r\n  CheckCircleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst EditTask = ({ visible, cancel, singleData }) => {\r\n  const [tasklist, settasklist] = useState([{ text: '', status: false }]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(singleData).length > 0 && visible) {\r\n      settasklist(JSON.parse(singleData.tasklist));\r\n    }\r\n  }, [singleData, visible]);\r\n\r\n  return (\r\n    <Modal\r\n      title='View Task'\r\n      visible={visible}\r\n      centered\r\n      footer={null}\r\n      width={700}\r\n      bodyStyle={{ padding: '10px' }}\r\n      destroyOnClose={true}\r\n      onCancel={(e) => cancel(false)}\r\n    >\r\n      {tasklist.length > 0 && (\r\n        <ul style={{ listStyle: 'none', paddingLeft: 0 }}>\r\n          {tasklist.map((ele, index) => (\r\n            <li className='p-2 border' key={index}>\r\n              {ele.status ? (\r\n                <CheckCircleOutlined\r\n                  className='text-success mr-2'\r\n                  title='Completed'\r\n                />\r\n              ) : (\r\n                <ExclamationCircleOutlined\r\n                  className='text-warning mr-2'\r\n                  title='Not Completed'\r\n                />\r\n              )}\r\n              {ele.text}\r\n              {ele.hasOwnProperty('reason') && ele.reason !== '' && (\r\n                <p className='border-top mb-0 mt-2 pt-1'>\r\n                  <strong>Reason:</strong>{' '}\r\n                  {ele.hasOwnProperty('reason')\r\n                    ? ele.reason === ''\r\n                      ? '-'\r\n                      : ele.reason\r\n                    : ''}{' '}\r\n                </p>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nEditTask.propTypes = {\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  isErrorType: PropTypes.string,\r\n  user: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isError: state.task.isError,\r\n  errMessage: state.task.errMessage,\r\n  isErrorType: state.task.isErrorType,\r\n  user: state.user.data,\r\n  singleData: state.task.singleData,\r\n});\r\nexport default connect(mapStateToProps, {})(EditTask);\r\n","import {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  DatePicker,\r\n  Input,\r\n  message,\r\n  Popconfirm,\r\n  Row,\r\n} from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { PlusCircleOutlined, DeleteOutlined } from '@ant-design/icons';\r\nimport AddUser from './addUser';\r\nimport EditUser from './editUser';\r\nimport EditUserPass from './editPassword';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { listMeeting, deleteMeeting } from '../../../apis/dashboard/Meeting';\r\nimport store from '../../../redux/store';\r\nimport { SET_SIGNLE_MEETING } from '../../../actions/types';\r\nimport { listUser } from '../../../apis/dashboard/User';\r\n\r\nconst Index = ({\r\n  data,\r\n  loading,\r\n  errMessage,\r\n  isError,\r\n  isErrorType,\r\n  isAuthenticated,\r\n  listMeeting,\r\n  listUser,\r\n  deleteMeeting,\r\n}) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [modalVisibleedit, setModalVisibleedit] = useState(false);\r\n  const [modalVisibleeditPass, setModalVisibleeditPass] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      listMeeting();\r\n      listUser();\r\n    }\r\n  }, [listMeeting, isAuthenticated, listUser]);\r\n\r\n  const [searchData, setsearchData] = useState([]);\r\n  const [search, setsearch] = useState('');\r\n  const [dateSelected, setdateSelected] = useState(moment(new Date()));\r\n\r\n  useEffect(() => {\r\n    if (isError && isErrorType === 'SUCCESS') {\r\n      message.success(errMessage);\r\n    } else if (isError && isErrorType === 'FAIL') {\r\n      message.error(errMessage);\r\n    }\r\n  }, [isError, isErrorType, errMessage]);\r\n\r\n  useEffect(() => {\r\n    if (data !== null) {\r\n      var result = data;\r\n      if (search !== '' && search !== null) {\r\n        result = data.filter(\r\n          (item) =>\r\n            (item.title !== null\r\n              ? item.title.toLowerCase().indexOf(search.toLowerCase()) > -1\r\n              : false) ||\r\n            (item.description !== null\r\n              ? item.description.toLowerCase().indexOf(search.toLowerCase()) >\r\n                -1\r\n              : false)\r\n        );\r\n      }\r\n      if (dateSelected !== null) {\r\n        result = result.filter(\r\n          (ele) =>\r\n            moment(ele.i_date.substring(0, 10)).format('DD-MM-YYYY') ===\r\n            dateSelected.format('DD-MM-YYYY')\r\n        );\r\n      }\r\n      setsearchData(result);\r\n    }\r\n  }, [data, search, dateSelected]);\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row>\r\n          <Col sm={8} md={6} lg={5} className='text-left mb-3'>\r\n            <Input\r\n              placeholder='Search'\r\n              value={search}\r\n              onChange={(e) => setsearch(e.target.value)}\r\n            />\r\n          </Col>\r\n          <Col sm={8} md={6} lg={5} className='text-left mb-3 pl-2'>\r\n            <DatePicker\r\n              style={{ width: '100%' }}\r\n              format={'DD-MM-YYYY'}\r\n              value={dateSelected}\r\n              onChange={(e) => setdateSelected(e)}\r\n            />\r\n          </Col>\r\n          <Col sm={8} md={12} lg={14} className='text-right mb-3'>\r\n            <Button\r\n              type='primary '\r\n              icon={<PlusCircleOutlined />}\r\n              onClick={(e) => setModalVisible(true)}\r\n            >\r\n              Create Meeting\r\n            </Button>\r\n          </Col>\r\n          <Col sm={24} md={24} lg={24}>\r\n            <Row>\r\n              {searchData.map((ele, index) => (\r\n                <Col sm={8} key={index} className='p-1'>\r\n                  <Card\r\n                    bodyStyle={{ padding: '15px', cursor: 'pointer' }}\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      store.dispatch({\r\n                        type: SET_SIGNLE_MEETING,\r\n                        payload: ele,\r\n                      });\r\n                      setModalVisibleedit(true);\r\n                    }}\r\n                  >\r\n                    <p className='mb-1 pb-0'>\r\n                      <span className=''>\r\n                        {moment(ele.i_date.substring(0, 10)).format(\r\n                          'DD-MMM-YYYY'\r\n                        )}\r\n                      </span>\r\n                      <span className='float-right'>\r\n                        {moment(ele.i_time).format('hh:mm A')}\r\n                      </span>\r\n                    </p>\r\n                    <h5 className='mb-1'>{ele.title}</h5>\r\n                    <p className='mb-1'>{ele.meeting_point}</p>\r\n                    <p className='mb-1'>{ele.description}</p>\r\n                    <p className='mb-0'>\r\n                      Created by: {ele.user.first_name} {ele.user.last_name}\r\n                      {ele.user.id ===\r\n                        parseInt(sessionStorage.getItem('id')) && (\r\n                        <Popconfirm\r\n                          title='Are you sure?'\r\n                          onConfirm={(e) => {\r\n                            e.stopPropagation();\r\n                            deleteMeeting({ id: ele.id });\r\n                          }}\r\n                          onCancel={(e) => {\r\n                            e.stopPropagation();\r\n                          }}\r\n                          okText='Yes'\r\n                          cancelText='No'\r\n                        >\r\n                          <DeleteOutlined\r\n                            className='text-danger float-right'\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              e.preventDefault();\r\n                            }}\r\n                          />\r\n                        </Popconfirm>\r\n                      )}\r\n                    </p>\r\n                  </Card>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n      <AddUser visible={modalVisible} cancel={setModalVisible} />\r\n      <EditUser visible={modalVisibleedit} cancel={setModalVisibleedit} />\r\n      <EditUserPass\r\n        visible={modalVisibleeditPass}\r\n        cancel={setModalVisibleeditPass}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nIndex.propTypes = {\r\n  listMeeting: PropTypes.func,\r\n  deleteMeeting: PropTypes.func,\r\n  listUser: PropTypes.func,\r\n  data: PropTypes.any,\r\n  loading: PropTypes.any,\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  isErrorType: PropTypes.string,\r\n  isAuthenticated: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  data: state.meeting.data,\r\n  loading: state.meeting.loading,\r\n  isError: state.meeting.isError,\r\n  errMessage: state.meeting.errMessage,\r\n  isErrorType: state.meeting.isErrorType,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  listMeeting,\r\n  listUser,\r\n  deleteMeeting,\r\n})(Index);\r\n"],"sourceRoot":""}