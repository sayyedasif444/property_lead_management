{"version":3,"sources":["views/app-views/PropertyManagement/index.js"],"names":["Meta","Card","connect","state","data","property","loading","isError","errMessage","isErrorType","isAuthenticated","auth","listProperty","deleteProperty","useState","dataz","setdataz","useEffect","map","ele","expected_price","mainData","setmainData","search","setsearch","dataSet","setdataSet","filter","isActive","index","propert_id","parseInt","setmaxPrice","Math","max","slider","setslider","result","item","property_type","toLowerCase","indexOf","property_location","property_locality","property_area","message","success","error","maxPrice","history","useHistory","sm","className","md","lg","placeholder","value","onChange","e","target","length","range","min","type","icon","onClick","push","tip","size","style","width","cover","alt","src","property_media","media_type","BACKEND_URL_MEDIA","media_link","height","objectFit","actions","title","onConfirm","id","preventDefault","to","store","dispatch","SET_SIGNLE_PROPERTY","payload","createdAt","substr","split","reverse","join","description","float","user","first_name","last_name"],"mappings":"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","file":"static/js/29.1f9da0bb.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Input,\r\n  message,\r\n  Popconfirm,\r\n  Row,\r\n  Slider,\r\n  Spin,\r\n} from 'antd';\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  EyeOutlined,\r\n  PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProperty, listProperty } from '../../../apis/dashboard/Property';\r\nimport { BACKEND_URL_MEDIA, SET_SIGNLE_PROPERTY } from '../../../actions/types';\r\nimport store from '../../../redux/store';\r\nconst { Meta } = Card;\r\n\r\nconst Index = ({\r\n  data,\r\n  loading,\r\n  listProperty,\r\n  errMessage,\r\n  isError,\r\n  isErrorType,\r\n  deleteProperty,\r\n  isAuthenticated,\r\n}) => {\r\n  const [dataz, setdataz] = useState([]);\r\n  useEffect(() => {\r\n    setdataz(\r\n      data.map((ele) => {\r\n        return {\r\n          ...ele,\r\n          expected_price: ele.expected_price !== null ? ele.expected_price : 0,\r\n        };\r\n      })\r\n    );\r\n  }, [data]);\r\n\r\n  const [mainData, setmainData] = useState([]);\r\n  const [search, setsearch] = useState('');\r\n  const [dataSet, setdataSet] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setdataSet(\r\n      dataz\r\n        .filter((ele) => ele.isActive)\r\n        .map((ele, index) => {\r\n          return {\r\n            ...ele,\r\n            propert_id: 'PROPERTY' + (index + 1),\r\n            expected_price:\r\n              ele.expected_price !== null ? parseInt(ele.expected_price) : 0,\r\n          };\r\n        })\r\n    );\r\n    setmaxPrice(\r\n      Math.max(\r\n        ...dataz.map((ele) =>\r\n          ele.expected_price !== null ? parseInt(ele.expected_price) : 0\r\n        )\r\n      ) / 100000\r\n    );\r\n  }, [dataz]);\r\n  const [slider, setslider] = useState([0, 0]);\r\n\r\n  useEffect(() => {\r\n    var result = [];\r\n    if (slider[1] === 0) {\r\n      result = dataSet;\r\n    } else {\r\n      result = dataSet.filter(\r\n        (ele) =>\r\n          parseInt(ele.expected_price) >= slider[0] * 100000 &&\r\n          parseInt(ele.expected_price) <= slider[1] * 100000\r\n      );\r\n    }\r\n    if (search !== '' && search !== null && dataSet !== null) {\r\n      result = dataSet.filter(\r\n        (item) =>\r\n          (item.property_type !== null\r\n            ? item.property_type.toLowerCase().indexOf(search.toLowerCase()) >\r\n              -1\r\n            : false) ||\r\n          (item.property_location !== null\r\n            ? item.property_location\r\n                .toLowerCase()\r\n                .indexOf(search.toLowerCase()) > -1\r\n            : false) ||\r\n          (item.propert_id !== null\r\n            ? item.propert_id.toLowerCase().indexOf(search.toLowerCase()) > -1\r\n            : false) ||\r\n          (item.property_locality !== null\r\n            ? item.property_locality\r\n                .toLowerCase()\r\n                .indexOf(search.toLowerCase()) > -1\r\n            : false) ||\r\n          (item.property_area !== null\r\n            ? item.property_area.toLowerCase().indexOf(search.toLowerCase()) >\r\n              -1\r\n            : false)\r\n      );\r\n    }\r\n    setmainData(result);\r\n  }, [dataSet, search, slider]);\r\n\r\n  // useEffect(() => {\r\n  //   if (isAuthenticated) {\r\n  //     listProperty();\r\n  //   }\r\n  // }, [listProperty, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (isError && isErrorType === 'SUCCESS') {\r\n      message.success(errMessage);\r\n    } else if (isError && isErrorType === 'FAIL') {\r\n      message.error(errMessage);\r\n    }\r\n  }, [isError, isErrorType, errMessage]);\r\n\r\n  const [maxPrice, setmaxPrice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (maxPrice !== null) {\r\n      setslider([0, maxPrice]);\r\n    } else {\r\n      setslider([0, 0]);\r\n    }\r\n  }, [maxPrice]);\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col sm={24} className='border-bottom mb-3'>\r\n          <Row>\r\n            <Col sm={8} md={6} lg={5} className='text-left mb-3'>\r\n              <Input\r\n                placeholder='Search'\r\n                value={search}\r\n                onChange={(e) => {\r\n                  setsearch(e.target.value);\r\n                }}\r\n              />\r\n            </Col>\r\n            {dataSet.length > 0 && maxPrice !== null ? (\r\n              <Col sm={8} md={6} lg={5} className='text-left mb-3 pl-3'>\r\n                <span>\r\n                  Price: {slider[0]} to {slider[1]}L{' '}\r\n                </span>\r\n                <Slider\r\n                  range\r\n                  min={0}\r\n                  max={maxPrice}\r\n                  value={slider}\r\n                  onChange={(e) => {\r\n                    setslider(e);\r\n                  }}\r\n                />\r\n              </Col>\r\n            ) : (\r\n              <Col sm={8} md={6} lg={5} className='text-left mb-3 pl-3'></Col>\r\n            )}\r\n            <Col sm={8} md={12} lg={14} className='text-right mb-3'>\r\n              <Button\r\n                type='primary '\r\n                icon={<PlusCircleOutlined />}\r\n                onClick={(e) => {\r\n                  history.push('/app/add-property');\r\n                }}\r\n              >\r\n                Add Property\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        {loading ? (\r\n          <div className='spin-loader'>\r\n            <Spin tip='Loading...' size='large' />\r\n          </div>\r\n        ) : (\r\n          mainData.map((ele, index) => (\r\n            <Col sm={24} md={12} lg={8} className='pr-3' key={index}>\r\n              <Card\r\n                style={{\r\n                  width: '100%',\r\n                }}\r\n                cover={\r\n                  <img\r\n                    alt='example'\r\n                    src={\r\n                      ele.property_media === null\r\n                        ? '/img/noimage.jpg'\r\n                        : ele.property_media.filter(\r\n                            (ele) => ele.media_type === 'image'\r\n                          ).length > 0\r\n                        ? BACKEND_URL_MEDIA +\r\n                          ele.property_media.filter(\r\n                            (ele) => ele.media_type === 'image'\r\n                          )[0].media_link\r\n                        : '/img/noimage.jpg'\r\n                    }\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '190px',\r\n                      objectFit: 'cover',\r\n                    }}\r\n                  />\r\n                }\r\n                actions={[\r\n                  <Popconfirm\r\n                    title='Are you sure?'\r\n                    onConfirm={(e) => {\r\n                      deleteProperty({ id: ele.id, isActive: !ele.isActive });\r\n                    }}\r\n                  >\r\n                    <Link\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                      }}\r\n                      to='#!'\r\n                    >\r\n                      <DeleteOutlined className='text-danger' key='Delete' />\r\n                    </Link>\r\n                  </Popconfirm>,\r\n                  <Link\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      store.dispatch({\r\n                        type: SET_SIGNLE_PROPERTY,\r\n                        payload: ele,\r\n                      });\r\n                      history.push('/app/edit-property');\r\n                    }}\r\n                    to='#!'\r\n                  >\r\n                    <EditOutlined className='text-success' key='edit' />\r\n                  </Link>,\r\n                  <Link\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      store.dispatch({\r\n                        type: SET_SIGNLE_PROPERTY,\r\n                        payload: ele,\r\n                      });\r\n                      history.push('/app/view-property');\r\n                    }}\r\n                    to='#!'\r\n                  >\r\n                    <EyeOutlined className='text-primary' key='Download' />\r\n                  </Link>,\r\n                ]}\r\n              >\r\n                <Meta\r\n                  title={\r\n                    <>\r\n                      <span>{'#' + ele.propert_id}</span>\r\n                      <small className='float-right'>\r\n                        {ele.createdAt\r\n                          .substr(0, 10)\r\n                          .split('-')\r\n                          .reverse()\r\n                          .join('-')}\r\n                      </small>\r\n                    </>\r\n                  }\r\n                  description={\r\n                    <>\r\n                      <p className='float-left mb-0 pb-0 w-100 text-capitalize'>\r\n                        {ele.property_location}\r\n                      </p>\r\n                      <div style={{ width: '60%', float: 'left' }}>\r\n                        {ele.user !== null\r\n                          ? ele.user.first_name + ' ' + ele.user.last_name\r\n                          : ''}\r\n                      </div>\r\n                      <div\r\n                        className='text-right'\r\n                        style={{ width: '40%', float: 'left' }}\r\n                      >\r\n                        Price:{' '}\r\n                        {ele.expected_price !== null ? ele.expected_price : ''}\r\n                      </div>\r\n                    </>\r\n                  }\r\n                />\r\n              </Card>\r\n            </Col>\r\n          ))\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nIndex.propTypes = {\r\n  listProperty: PropTypes.func,\r\n  deleteProperty: PropTypes.func,\r\n  data: PropTypes.any,\r\n  loading: PropTypes.any,\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  isErrorType: PropTypes.string,\r\n  isAuthenticated: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  data: state.property.data,\r\n  loading: state.property.loading,\r\n  isError: state.property.isError,\r\n  errMessage: state.property.errMessage,\r\n  isErrorType: state.property.isErrorType,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { listProperty, deleteProperty })(\r\n  Index\r\n);\r\n"],"sourceRoot":""}