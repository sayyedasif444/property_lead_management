{"version":3,"sources":["redux/reducers/Auth.js","redux/reducers/Theme.js","redux/reducers/Property.js","redux/reducers/User.js","redux/reducers/index.js","redux/store/index.js","components/shared-components/Flex/index.js","apis/login/auth.js","actions/types.js","configs/EnvironmentConfig.js","configs/AppConfig.js","utils/setAuthToken.js","redux/constants/Theme.js","constants/ThemeConstant.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavProfile.js","components/layout-components/HeaderNav.js","configs/NavigationConfig.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","token","sessionStorage","getItem","isAuthenticated","loading","isError","isErrorType","errMessage","first_name","last_name","phone_number","user_type","email","id","authReducer","state","action","type","payload","LOGOUT","RESET_LOGIN_FAILED","SINGLE_SELF_USER","setItem","emailid","LOGIN_SUCCESS","firstName","lastName","LOGIN_FAILED","clear","hasOwnProperty","message","SET_LOADING_FALSE","initTheme","THEME_CONFIG","theme","TOGGLE_COLLAPSED_NAV","navCollapsed","SIDE_NAV_STYLE_CHANGE","sideNavTheme","CHANGE_LOCALE","locale","NAV_TYPE_CHANGE","navType","TOP_NAV_COLOR_CHANGE","topNavColor","HEADER_NAV_COLOR_CHANGE","headerNavColor","TOGGLE_MOBILE_NAV","mobileNav","SWITCH_THEME","currentTheme","DIRECTION_CHANGE","direction","data","singleData","propertyReducer","SET_SIGNLE_PROPERTY","LOADING_LIST_PROPERTY","LIST_PROPERTY_DATA","SET_ALERT_PROPERTY","userReducer","SET_SIGNLE_USER","LOADING_LIST_USER","LIST_USER_DATA","SET_ALERT_USER","combineReducers","auth","property","user","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","login","password","dispatch","a","config","body","axios","method","url","BACKEND_URL","headers","then","response","statuscode","setTimeout","e","catch","error","logout","forgotPassword","BACKEND_URL_MEDIA","APP_NAME","APP_PREFIX_PATH","AUTH_PREFIX_PATH","setAuthToken","defaults","common","SIDE_NAV_WIDTH","NAV_TYPE_SIDE","NAV_TYPE_TOP","injectIntl","withRef","Icon","this","React","createElement","Component","Utils","name","initials","match","shift","pop","toUpperCase","navTree","path","route","p","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","key","toLowerCase","list","value","filter","item","input","searchText","screens","breakpoints","push","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","superUserNavTree","title","icon","ProjectOutlined","breadcrumb","submenu","FileAddOutlined","UserSwitchOutlined","userNavTree","setLocale","isLocaleOn","localeKey","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","useState","navContent","setnavContent","useEffect","closeMobileNav","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","paddingLeft","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","margin","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","menuItem","EditOutlined","role","profileImg","profileMenu","size","el","LogoutOutlined","overlay","trigger","marginTop","Header","toggleCollapsedNav","navMode","zIndex","MenuUnfoldOutlined","MenuFoldOutlined","nav","navigationConfig","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","slice","AppBreadcrumb","PageHeader","display","fallback","component","lazy","Content","AppLayout","currentRouteInfo","isNavSide","getLayoutGutter","status","useThemeSwitcher","history","useHistory","paddingRight","memo","AppViews","from","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","document","classList","add","removeBodyClass","remove","currentAppLocale","Array","exact","themes","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32dfb3e6.chunk.js","sourcesContent":["import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  RESET_LOGIN_FAILED,\r\n  SET_LOADING_FALSE,\r\n  LOGOUT,\r\n  SINGLE_SELF_USER,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  token: sessionStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  first_name: null,\r\n  last_name: null,\r\n  phone_number: null,\r\n  user_type: null,\r\n  email: null,\r\n  id: null,\r\n};\r\n\r\nfunction authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: true,\r\n        isError: false,\r\n        isErrorType: null,\r\n        errMessage: null,\r\n        first_name: null,\r\n        last_name: null,\r\n        user_type: null,\r\n        email: null,\r\n        id: null,\r\n      };\r\n    case RESET_LOGIN_FAILED:\r\n      return {\r\n        ...state,\r\n        isError: false,\r\n        isErrorType: '',\r\n        errMessage: '',\r\n      };\r\n    case SINGLE_SELF_USER:\r\n      sessionStorage.setItem('firstName', payload.first_name);\r\n      sessionStorage.setItem('lastName', payload.last_name);\r\n      sessionStorage.setItem('email', payload.emailid);\r\n      sessionStorage.setItem('user_type', payload.user_type);\r\n      sessionStorage.setItem('phone_number', payload.phone_number);\r\n      return {\r\n        ...state,\r\n        first_name: payload.first_name,\r\n        last_name: payload.last_name,\r\n        email: payload.emailid,\r\n        user_type: payload.user_type,\r\n        phone_number: payload.phone_number,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      sessionStorage.setItem('token', payload.token);\r\n      sessionStorage.setItem('firstName', payload.firstName);\r\n      sessionStorage.setItem('lastName', payload.lastName);\r\n      sessionStorage.setItem('email', payload.email);\r\n      sessionStorage.setItem('id', payload.id);\r\n      sessionStorage.setItem('user_type', payload.user_type);\r\n      sessionStorage.setItem('phone_number', payload.phone_number);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        token: payload.token,\r\n        first_name: payload.firstName,\r\n        last_name: payload.lastName,\r\n        email: payload.email,\r\n        id: payload.id,\r\n        user_type: payload.user_type,\r\n        phone_number: payload.phone_number,\r\n      };\r\n    case LOGIN_FAILED:\r\n      sessionStorage.clear();\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        isError: true,\r\n        isErrorType: payload.hasOwnProperty('type')\r\n          ? payload.type\r\n          : 'LOGIN_FAILED',\r\n        errMessage: payload.message,\r\n      };\r\n    case SET_LOADING_FALSE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from '../../configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {\r\n  LIST_PROPERTY_DATA,\r\n  LOADING_LIST_PROPERTY,\r\n  SET_ALERT_PROPERTY,\r\n  SET_SIGNLE_PROPERTY,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  singleData: {},\r\n};\r\n\r\nfunction propertyReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SIGNLE_PROPERTY:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case LOADING_LIST_PROPERTY:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_PROPERTY_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case SET_ALERT_PROPERTY:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default propertyReducer;\r\n","import {\r\n  LIST_USER_DATA,\r\n  LOADING_LIST_USER,\r\n  SET_ALERT_USER,\r\n  SET_SIGNLE_USER,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  singleData: {},\r\n};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SIGNLE_USER:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case LOADING_LIST_USER:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_USER_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case SET_ALERT_USER:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\nimport auth from './Auth';\r\nimport theme from './Theme';\r\nimport property from './Property';\r\nimport user from './User';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  theme,\r\n  property,\r\n  user,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import axios from 'axios';\r\nimport {\r\n  LOGIN_FAILED,\r\n  LOGOUT,\r\n  BACKEND_URL,\r\n  RESET_LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n} from '../../actions/types';\r\n\r\n//Login user\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { emailid: email, password: password };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/login',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: response.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAILED,\r\n          payload: { message: response.data.message, type: 'LOGIN' },\r\n        });\r\n        setTimeout((e) => {\r\n          dispatch({ type: RESET_LOGIN_FAILED });\r\n        }, 6000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n        payload: { message: 'server error', type: 'LOGIN' },\r\n      });\r\n    });\r\n};\r\n\r\n//LOGOUT\r\nexport const logout = () => async (dispatch) => {\r\n  if (sessionStorage.getItem('token') === null) {\r\n    return;\r\n  }\r\n  await dispatch({ type: LOGOUT });\r\n  sessionStorage.clear();\r\n};\r\n\r\n//forgot password\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { emailid: email };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/email-password',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: LOGIN_FAILED,\r\n          payload: { message: response.data.message, type: 'RESET_SUCCESS' },\r\n        });\r\n        setTimeout((e) => {\r\n          dispatch({ type: RESET_LOGIN_FAILED });\r\n        }, 6000);\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAILED,\r\n          payload: { message: response.data.message, type: 'RESET_FAILED' },\r\n        });\r\n        setTimeout((e) => {\r\n          dispatch({ type: RESET_LOGIN_FAILED });\r\n        }, 6000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n        payload: { message: 'Server error', type: 'RESET_FAILED' },\r\n      });\r\n      setTimeout((e) => {\r\n        dispatch({ type: RESET_LOGIN_FAILED });\r\n      }, 6000);\r\n    });\r\n};\r\n","//Dev URL\r\nexport const BACKEND_URL = 'http://181.215.78.135:5000/api/';\r\nexport const BACKEND_URL_MEDIA = 'http://181.215.78.135:5000/uploads/';\r\nexport const FRONT_END_URL = 'http://181.215.78.135:5000/uploads/';\r\n\r\n//auth\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const OTP_FREEZE = 'OTP_FREEZE';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const TOKEN_CHECK = 'TOKEN_CHECK';\r\nexport const TOKEN_CHECK_FAIL = 'TOKEN_CHECK_FAIL';\r\nexport const LOGIN_ALERT_REMOVE = 'LOGIN_ALERT_REMOVE';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const RESET_SUCCESS = 'RESET_SUCCESS';\r\nexport const RESET_FAILED = 'RESET_FAILED';\r\nexport const GET_USER_DATA_BY_EMAIL = 'GET_USER_DATA_BY_EMAIL';\r\nexport const SET_LOADING_FALSE = 'SET_LOADING_FALSE';\r\nexport const SET_LOGOUT_PROVISION = 'SET_LOGOUT_PROVISION';\r\nexport const SET_LOADING_TRUE = 'SET_LOADING_TRUE';\r\nexport const RESET_LOGIN_FAILED = 'RESET_LOGIN_FAILED';\r\nexport const OTP_SETTING = 'OTP_SETTING';\r\nexport const OTP_FALSE = 'OTP_FALSE';\r\nexport const SET_DIVISION_ROLE = 'SET_DIVISION_ROLE';\r\nexport const SET_COMPANY_ROLE = 'SET_COMPANY_ROLE';\r\nexport const IDLE_TIMEOUT = 'IDLE_TIMEOUT';\r\nexport const SET_OTP_TIMEOUT = 'SET_OTP_TIMEOUT';\r\nexport const SET_CHECK_TOKEN_BOOL = 'SET_CHECK_TOKEN_BOOL';\r\nexport const RESET_IDLE_TIME = 'RESET_IDLE_TIME';\r\nexport const LIST_OF_ACTIVE_PROCESS = 'LIST_OF_ACTIVE_PROCESS';\r\nexport const SINGLE_SELF_USER = 'SINGLE_SELF_USER';\r\n\r\nexport const SET_ALERT_PROPERTY = 'SET_ALERT_PROPERTY';\r\nexport const LIST_PROPERTY_DATA = 'LIST_PROPERTY_DATA';\r\nexport const LOADING_LIST_PROPERTY = 'LOADING_LIST_PROPERTY';\r\nexport const SET_SIGNLE_PROPERTY = 'SET_SIGNLE_PROPERTY';\r\n\r\n//User\r\nexport const SET_ALERT_USER = 'SET_ALERT_USER';\r\nexport const LIST_USER_DATA = 'LIST_USER_DATA';\r\nexport const LOADING_LIST_USER = 'LOADING_LIST_USER';\r\nexport const SET_SIGNLE_USER = 'SET_SIGNLE_USER';\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import { env } from './EnvironmentConfig';\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL;\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n  navType: 'SIDE',\r\n  sideNavTheme: 'SIDE_NAV_DARK',\r\n  navCollapsed: false,\r\n  topNavColor: '#1245A8',\r\n  headerNavColor: 'rgb(18, 69, 168)',\r\n  locale: 'en',\r\n  currentTheme: 'light',\r\n  direction: 'ltr',\r\n};\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = async (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","class Utils {\r\n  /**\r\n   * Get first character from first & last sentences of a username\r\n   * @param {String} name - Username\r\n   * @return {String} 2 characters string\r\n   */\r\n  static getNameInitial(name) {\r\n    let initials = name.match(/\\b\\w/g) || [];\r\n    return ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * Get current path related object from Navigation Tree\r\n   * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n   * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n   * @return {Object} object that contained the path string\r\n   */\r\n  static getRouteInfo(navTree, path) {\r\n    if (navTree.path === path) {\r\n      return navTree;\r\n    }\r\n    let route;\r\n    for (let p in navTree) {\r\n      if (navTree.hasOwnProperty(p) && typeof navTree[p] === 'object') {\r\n        route = this.getRouteInfo(navTree[p], path);\r\n        if (route) {\r\n          return route;\r\n        }\r\n      }\r\n    }\r\n    return route;\r\n  }\r\n\r\n  /**\r\n   * Get accessible color contrast\r\n   * @param {String} hex - Hex color code e.g '#3e82f7'\r\n   * @return {String} 'dark' or 'light'\r\n   */\r\n  static getColorContrast(hex) {\r\n    if (!hex) {\r\n      return 'dark';\r\n    }\r\n    const threshold = 130;\r\n    const hRed = hexToR(hex);\r\n    const hGreen = hexToG(hex);\r\n    const hBlue = hexToB(hex);\r\n    function hexToR(h) {\r\n      return parseInt(cutHex(h).substring(0, 2), 16);\r\n    }\r\n    function hexToG(h) {\r\n      return parseInt(cutHex(h).substring(2, 4), 16);\r\n    }\r\n    function hexToB(h) {\r\n      return parseInt(cutHex(h).substring(4, 6), 16);\r\n    }\r\n    function cutHex(h) {\r\n      return h.charAt(0) === '#' ? h.substring(1, 7) : h;\r\n    }\r\n    const cBrightness = (hRed * 299 + hGreen * 587 + hBlue * 114) / 1000;\r\n    if (cBrightness > threshold) {\r\n      return 'dark';\r\n    } else {\r\n      return 'light';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Darken or lighten a hex color\r\n   * @param {String} color - Hex color code e.g '#3e82f7'\r\n   * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n   * @return {String} Darken or lighten color\r\n   */\r\n  static shadeColor(color, percent) {\r\n    let R = parseInt(color.substring(1, 3), 16);\r\n    let G = parseInt(color.substring(3, 5), 16);\r\n    let B = parseInt(color.substring(5, 7), 16);\r\n    R = parseInt((R * (100 + percent)) / 100);\r\n    G = parseInt((G * (100 + percent)) / 100);\r\n    B = parseInt((B * (100 + percent)) / 100);\r\n    R = R < 255 ? R : 255;\r\n    G = G < 255 ? G : 255;\r\n    B = B < 255 ? B : 255;\r\n    const RR =\r\n      R.toString(16).length === 1 ? `0${R.toString(16)}` : R.toString(16);\r\n    const GG =\r\n      G.toString(16).length === 1 ? `0${G.toString(16)}` : G.toString(16);\r\n    const BB =\r\n      B.toString(16).length === 1 ? `0${B.toString(16)}` : B.toString(16);\r\n    return `#${RR}${GG}${BB}`;\r\n  }\r\n\r\n  /**\r\n   * Convert RGBA to HEX\r\n   * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n   * @return {String} HEX color\r\n   */\r\n  static rgbaToHex(rgba) {\r\n    const trim = (str) => str.replace(/^\\s+|\\s+$/gm, '');\r\n    const inParts = rgba.substring(rgba.indexOf('(')).split(','),\r\n      r = parseInt(trim(inParts[0].substring(1)), 10),\r\n      g = parseInt(trim(inParts[1]), 10),\r\n      b = parseInt(trim(inParts[2]), 10),\r\n      a = parseFloat(\r\n        trim(inParts[3].substring(0, inParts[3].length - 1))\r\n      ).toFixed(2);\r\n    const outParts = [\r\n      r.toString(16),\r\n      g.toString(16),\r\n      b.toString(16),\r\n      Math.round(a * 255)\r\n        .toString(16)\r\n        .substring(0, 2),\r\n    ];\r\n\r\n    outParts.forEach(function (part, i) {\r\n      if (part.length === 1) {\r\n        outParts[i] = '0' + part;\r\n      }\r\n    });\r\n    return `#${outParts.join('')}`;\r\n  }\r\n\r\n  /**\r\n   * Returns either a positive or negative\r\n   * @param {Number} number - number value\r\n   * @param {any} positive - value that return when positive\r\n   * @param {any} negative - value that return when negative\r\n   * @return {any} positive or negative value based on param\r\n   */\r\n  static getSignNum(number, positive, negative) {\r\n    if (number > 0) {\r\n      return positive;\r\n    }\r\n    if (number < 0) {\r\n      return negative;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns either ascending or descending value\r\n   * @param {Object} a - antd Table sorter param a\r\n   * @param {Object} b - antd Table sorter param b\r\n   * @param {String} key - object key for compare\r\n   * @return {any} a value minus b value\r\n   */\r\n  static antdTableSorter(a, b, key) {\r\n    if (typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n      return a[key] - b[key];\r\n    }\r\n\r\n    if (typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n      a = a[key].toLowerCase();\r\n      b = b[key].toLowerCase();\r\n      return a > b ? -1 : b > a ? 1 : 0;\r\n    }\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Filter array of object\r\n   * @param {Array} list - array of objects that need to filter\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - value that excluded from filter\r\n   * @return {Array} a value minus b value\r\n   */\r\n  static filterArray(list, key, value) {\r\n    let data = list;\r\n    if (list) {\r\n      data = list.filter((item) => item[key] === value);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Remove object from array by value\r\n   * @param {Array} list - array of objects\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - target value\r\n   * @return {Array} Array that removed target object\r\n   */\r\n  static deleteArrayRow(list, key, value) {\r\n    let data = list;\r\n    if (list) {\r\n      data = list.filter((item) => item[key] !== value);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Wild card search on all property of the object\r\n   * @param {Number | String} input - any value to search\r\n   * @param {Array} list - array for search\r\n   * @return {Array} array of object contained keyword\r\n   */\r\n  static wildCardSearch(list, input) {\r\n    const searchText = (item) => {\r\n      for (let key in item) {\r\n        if (item[key] == null) {\r\n          continue;\r\n        }\r\n        if (\r\n          item[key]\r\n            .toString()\r\n            .toUpperCase()\r\n            .indexOf(input.toString().toUpperCase()) !== -1\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    };\r\n    list = list.filter((value) => searchText(value));\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Get Breakpoint\r\n   * @param {Object} screens - Grid.useBreakpoint() from antd\r\n   * @return {Array} array of breakpoint size\r\n   */\r\n  static getBreakPoint(screens) {\r\n    let breakpoints = [];\r\n    for (const key in screens) {\r\n      if (screens.hasOwnProperty(key)) {\r\n        const element = screens[key];\r\n        if (element) {\r\n          breakpoints.push(key);\r\n        }\r\n      }\r\n    }\r\n    return breakpoints;\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from '../../constants/ThemeConstant';\r\nimport utils from '../../utils';\r\nimport { onMobileNavToggle } from '../../redux/actions/Theme';\r\nimport {\r\n  ProjectOutlined,\r\n  FileAddOutlined,\r\n  UserSwitchOutlined,\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from '../../configs/AppConfig';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst superUserNavTree = [\r\n  {\r\n    key: 'general-settings',\r\n    path: `${APP_PREFIX_PATH}/`,\r\n    title: 'sidenav.general-settings',\r\n    icon: ProjectOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: 'property-management',\r\n        path: `${APP_PREFIX_PATH}/property-management`,\r\n        title: 'sidenav.property-management',\r\n        icon: ProjectOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'lead-management',\r\n        path: `${APP_PREFIX_PATH}/lead-management`,\r\n        title: 'sidenav.lead-management',\r\n        icon: FileAddOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'user-management',\r\n        path: `${APP_PREFIX_PATH}/user-management`,\r\n        title: 'sidenav.user-management',\r\n        icon: UserSwitchOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst userNavTree = [\r\n  {\r\n    key: 'general-settings',\r\n    path: `${APP_PREFIX_PATH}/`,\r\n    title: 'sidenav.general-settings',\r\n    icon: ProjectOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: 'property-management',\r\n        path: `${APP_PREFIX_PATH}/property-management`,\r\n        title: 'sidenav.property-management',\r\n        icon: ProjectOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'lead-management',\r\n        path: `${APP_PREFIX_PATH}/lead-management`,\r\n        title: 'sidenav.lead-management',\r\n        icon: FileAddOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = '';\r\n  if (key) {\r\n    const arr = key.split('-');\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n  const {\r\n    sideNavTheme,\r\n    routeInfo,\r\n    hideGroupTitle,\r\n    localization,\r\n    onMobileNavToggle,\r\n    user_type,\r\n  } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n  const [navContent, setnavContent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user_type === 'USER') {\r\n      setnavContent(userNavTree);\r\n    } else {\r\n      setnavContent(superUserNavTree);\r\n    }\r\n  }, [user_type]);\r\n\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      onMobileNavToggle(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? 'light' : 'dark'}\r\n      mode='inline'\r\n      style={{ height: '100%', borderRight: 0 }}\r\n      defaultSelectedKeys={['property-management']}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? 'hide-group-title' : 'tt'}\r\n    >\r\n      {navContent.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item\r\n                      key={subMenuSecond.key}\r\n                      style={{ paddingLeft: '34px' }}\r\n                    >\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link\r\n                        onClick={() => closeMobileNav()}\r\n                        to={subMenuSecond.path}\r\n                      />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link\r\n                    onClick={() => closeMobileNav()}\r\n                    to={subMenuFirst.path}\r\n                  />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? (\r\n              <Link onClick={() => closeMobileNav()} to={menu.path} />\r\n            ) : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  const [navContent, setnavContent] = useState([]);\r\n  useEffect(() => {\r\n    setnavContent(superUserNavTree);\r\n  }, []);\r\n\r\n  return (\r\n    <Menu mode='horizontal' style={{ backgroundColor: topNavColor }}>\r\n      {navContent.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName='top-nav-menu'\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  popupClassName='top-nav-menu'\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  const { user_type } = auth;\r\n  return {\r\n    sideNavTheme,\r\n    topNavColor,\r\n    user_type,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from '../../constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from '../../constants/ThemeConstant';\r\nimport utils from '../../utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react';\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_TOP,\r\n} from '../../constants/ThemeConstant';\r\nimport { APP_NAME } from '../../configs/AppConfig';\r\nimport { connect } from 'react-redux';\r\nimport utils from '../../utils';\r\nimport { Grid } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  if (isMobile && !props.mobileLogo) {\r\n    return 0;\r\n  }\r\n  if (isNavTop) {\r\n    return 'auto';\r\n  }\r\n  if (navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`;\r\n  }\r\n};\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if (logoType === 'light') {\r\n    if (navCollapsed) {\r\n      return '/img/logo-white.png';\r\n    }\r\n    return '/img/logo-white.png';\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-white.png';\r\n  }\r\n  return '/img/logo-white.png';\r\n};\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if (isMobile && !mobileLogo) {\r\n    return 'd-none';\r\n  } else {\r\n    return 'logo';\r\n  }\r\n};\r\n\r\nexport const Logo = (props) => {\r\n  const { navCollapsed } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n  return (\r\n    <Link to='/app/property-management'\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)}\r\n      style={{ width: `${getLogoWidthGutter(props, isMobile)}` }}\r\n    >\r\n      <img\r\n        src={getLogo(props)}\r\n        alt={`${APP_NAME} logo`}\r\n        style={{ height: navCollapsed ? '20px' : '50px', margin: 'auto' }}\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } = theme;\r\n  return { navCollapsed, navType };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"../../constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"../../redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"../../components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React from 'react';\r\nimport { Menu, Dropdown, Avatar } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { EditOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport Icon from '../../components/util-components/Icon';\r\nimport { logout } from '../../apis/login/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst menuItem = [\r\n  {\r\n    title: 'Edit Profile',\r\n    icon: EditOutlined,\r\n    path: '/app/user-profile',\r\n  },\r\n\r\n  // {\r\n  //   title: 'Account Setting',\r\n  //   icon: SettingOutlined,\r\n  //   path: '/',\r\n  // },\r\n  // {\r\n  //   title: 'Help Center',\r\n  //   icon: QuestionCircleOutlined,\r\n  //   path: '/',\r\n  // },\r\n];\r\n\r\nexport const NavProfile = ({ logout, first_name, last_name, role }) => {\r\n  const profileImg = '/img/avatars/thumb-1.png';\r\n  const profileMenu = (\r\n    <div className='nav-profile nav-dropdown'>\r\n      <div className='nav-profile-header'>\r\n        <div className='d-flex'>\r\n          <Avatar size={45} src={profileImg} />\r\n          <div className='pl-3'>\r\n            <h4 className='mb-0'>\r\n              {first_name} {last_name}\r\n            </h4>\r\n            <span className='text-muted'>{role}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='nav-profile-body'>\r\n        <Menu>\r\n          {menuItem.map((el, i) => {\r\n            return (\r\n              <Menu.Item key={i}>\r\n                <Link to={el.path}>\r\n                  <Icon type={el.icon} />\r\n                  <span className='font-weight-normal'>{el.title}</span>\r\n                </Link>\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n          <Menu.Item key={menuItem.length + 1} onClick={(e) => logout()}>\r\n            <span>\r\n              <LogoutOutlined />\r\n              <span className='font-weight-normal'>Sign Out</span>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Dropdown placement='bottomRight' overlay={profileMenu} trigger={['click']}>\r\n      <Menu className='d-flex align-item-center' mode='horizontal'>\r\n        <Menu.Item key='profile'>\r\n          <Avatar src={profileImg} style={{ marginTop: '-10px' }} />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nNavProfile.propTypes = {};\r\nconst mapStateToProps = (state) => ({\r\n  first_name: state.auth.first_name,\r\n  last_name: state.auth.last_name,\r\n  role: state.auth.user_type,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(NavProfile);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\n// import NavNotification from './NavNotification';\r\nimport NavProfile from './NavProfile';\r\n\r\nimport {\r\n  toggleCollapsedNav,\r\n  onMobileNavToggle,\r\n} from '../../redux/actions/Theme';\r\nimport {\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  SIDE_NAV_WIDTH,\r\n} from '../../constants/ThemeConstant';\r\nimport utils from '../../utils';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = (props) => {\r\n  const {\r\n    navCollapsed,\r\n    mobileNav,\r\n    navType,\r\n    headerNavColor,\r\n    toggleCollapsedNav,\r\n    onMobileNavToggle,\r\n    isMobile,\r\n    currentTheme,\r\n  } = props;\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed);\r\n    } else {\r\n      onMobileNavToggle(!mobileNav);\r\n    }\r\n  };\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  const mode = () => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(\r\n        currentTheme === 'dark' ? '#00000' : '#ffffff'\r\n      );\r\n    }\r\n    return utils.getColorContrast(headerNavColor);\r\n  };\r\n  const navMode = mode();\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return '0px';\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Header\r\n      className={`app-header ${navMode}`}\r\n      style={{ backgroundColor: headerNavColor, zIndex: '999' }}\r\n    >\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode} />\r\n        <div className='nav' style={{ width: `calc(100% - ${getNavWidth()})` }}>\r\n          <div className='nav-left'>\r\n            <ul className='ant-menu ant-menu-root ant-menu-horizontal'>\r\n              {isNavTop && !isMobile ? null : (\r\n                <li\r\n                  className='ant-menu-item ant-menu-item-only-child'\r\n                  onClick={() => {\r\n                    onToggle();\r\n                  }}\r\n                >\r\n                  {navCollapsed || isMobile ? (\r\n                    <MenuUnfoldOutlined className='nav-icon' />\r\n                  ) : (\r\n                    <MenuFoldOutlined className='nav-icon' />\r\n                  )}\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className='nav-right'>\r\n            {/* <NavNotification /> */}\r\n            <NavProfile />\r\n            {/* <NavPanel direction={direction} /> */}\r\n          </div>\r\n          {/* <NavSearch active={searchActive} close={onSearchClose} /> */}\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const {\r\n    navCollapsed,\r\n    navType,\r\n    headerNavColor,\r\n    mobileNav,\r\n    currentTheme,\r\n    direction,\r\n  } = theme;\r\n  return {\r\n    navCollapsed,\r\n    navType,\r\n    headerNavColor,\r\n    mobileNav,\r\n    currentTheme,\r\n    direction,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleCollapsedNav,\r\n  onMobileNavToggle,\r\n})(HeaderNav);\r\n","const userNavTree = [];\r\nconst componentsNavTree = [];\r\nvar nav = [...componentsNavTree];\r\n\r\nif (sessionStorage.getItem('role') === 'USER') {\r\n  nav = userNavTree;\r\n}\r\n\r\nconst navigationConfig = [...nav];\r\n\r\nexport default navigationConfig;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from '../../configs/NavigationConfig';\r\nimport IntlMessage from '../../components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = {\r\n  '/app': <IntlMessage id='home' />,\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n  const assignBreadcrumb = (obj) =>\r\n    (breadcrumbData[obj.path] = <IntlMessage id={obj.title} />);\r\n  assignBreadcrumb(elm);\r\n  if (elm.submenu) {\r\n    elm.submenu.forEach((elm) => {\r\n      assignBreadcrumb(elm);\r\n      if (elm.submenu) {\r\n        elm.submenu.forEach((elm) => {\r\n          assignBreadcrumb(elm);\r\n        });\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\nconst BreadcrumbRoute = withRouter((props) => {\r\n  const { location } = props;\r\n  const pathSnippets = location.pathname.split('/').filter((i) => i);\r\n  const buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        {/* <Link to={url}>{breadcrumbData[url]}</Link> */}\r\n      </Breadcrumb.Item>\r\n    );\r\n  });\r\n\r\n  return <Breadcrumb>{buildBreadcrumb}</Breadcrumb>;\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n  render() {\r\n    return <BreadcrumbRoute />;\r\n  }\r\n}\r\n\r\nexport default AppBreadcrumb;\r\n","import React from 'react'\r\nimport AppBreadcrumb from '../../components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React, { lazy, Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Loading from '../../components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from '../../configs/AppConfig';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover='content' />}>\r\n      <Switch>\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/property-management`}\r\n          component={lazy(() => import(`./PropertyManagement`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/add-property`}\r\n          component={lazy(() => import(`./PropertyManagement/addProperty`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/edit-property`}\r\n          component={lazy(() => import(`./PropertyManagement/editProperty`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/view-property`}\r\n          component={lazy(() => import(`./PropertyManagement/viewProperty`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/user-management`}\r\n          component={lazy(() => import(`./UserManagement`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/user-profile`}\r\n          component={lazy(() => import(`./ProfileManage`))}\r\n        />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\nAppViews.propTypes = {};\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps, {})(AppViews);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from '../../components/layout-components/SideNav';\r\nimport TopNav from '../../components/layout-components/TopNav';\r\nimport Loading from '../../components/shared-components/Loading';\r\nimport MobileNav from '../../components/layout-components/MobileNav';\r\nimport HeaderNav from '../../components/layout-components/HeaderNav';\r\nimport PageHeader from '../../components/layout-components/PageHeader';\r\nimport AppViews from '../../views/app-views';\r\nimport { Layout, Grid } from 'antd';\r\n\r\nimport navigationConfig from '../../configs/NavigationConfig';\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR,\r\n} from '../../constants/ThemeConstant';\r\nimport utils from '../../utils';\r\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { APP_PREFIX_PATH } from '../../configs/AppConfig';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({\r\n  navCollapsed,\r\n  navType,\r\n  location,\r\n  direction,\r\n  isAuthenticated,\r\n}) => {\r\n  const currentRouteInfo = utils.getRouteInfo(\r\n    navigationConfig,\r\n    location.pathname\r\n  );\r\n\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg');\r\n  const isNavSide = navType === NAV_TYPE_SIDE;\r\n  const isNavTop = navType === NAV_TYPE_TOP;\r\n  const getLayoutGutter = () => {\r\n    if (isNavTop || isMobile) {\r\n      return 0;\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH;\r\n  };\r\n\r\n  const { status } = useThemeSwitcher();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      history.push('/auth');\r\n    }\r\n  }, [isAuthenticated, history]);\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover='page' />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if (direction === DIR_LTR) {\r\n      return { paddingLeft: getLayoutGutter() };\r\n    }\r\n    if (direction === DIR_RTL) {\r\n      return { paddingRight: getLayoutGutter() };\r\n    }\r\n    return { paddingLeft: getLayoutGutter() };\r\n  };\r\n  if (location.pathname === '/app/' || location.pathname === '/app') {\r\n    return <Redirect to={`${APP_PREFIX_PATH}/property-management`} />;\r\n  }\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile} />\r\n      {isNavTop && !isMobile ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n      <Layout className='app-container'>\r\n        {isNavSide && !isMobile ? (\r\n          <SideNav routeInfo={currentRouteInfo} />\r\n        ) : null}\r\n        <Layout className='app-layout' style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            {currentRouteInfo?.title === 'sidenav.my-compliance-view' ||\r\n            currentRouteInfo?.title === 'sidenav.events' ||\r\n            currentRouteInfo?.title === 'sidenav.compliance-view-task' ||\r\n            currentRouteInfo?.title === 'sidenav.compliance-approval' ? (\r\n              ''\r\n            ) : (\r\n              <PageHeader\r\n                display={currentRouteInfo?.breadcrumb}\r\n                title={currentRouteInfo?.title}\r\n              />\r\n            )}\r\n\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { navCollapsed, navType, locale } = theme;\r\n  const { isAuthenticated } = auth;\r\n  return { navCollapsed, navType, locale, isAuthenticated };\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Loading from '../../components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from '../../configs/AppConfig';\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover='page' />}>\r\n      <Switch>\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/login`}\r\n          component={lazy(() => import(`./authentication/login`))}\r\n        />\r\n         {/* <Route\r\n          path={`${AUTH_PREFIX_PATH}/otp`}\r\n          component={lazy(() => import(`./authentication/otp`))}\r\n        /> */}\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/forgot-password`}\r\n          component={lazy(() => import(`./authentication/forgot-password`))}\r\n        />\r\n        {/*<Route\r\n          path={`${AUTH_PREFIX_PATH}/reset-password`}\r\n          component={lazy(() => import(`./authentication/reset-password`))}\r\n        /> */}\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/error-1`}\r\n          component={lazy(() => import(`./errors/error-page-1`))}\r\n        />\r\n        <Redirect\r\n          from={`${AUTH_PREFIX_PATH}`}\r\n          to={`${AUTH_PREFIX_PATH}/login`}\r\n        />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default AppViews;\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from '../../views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport AppLayout from '../layouts/app-layout';\r\nimport AuthLayout from '../layouts/auth-layout';\r\nimport AppLocale from '../lang';\r\nimport { IntlProvider } from 'react-intl';\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from '../configs/AppConfig';\r\nimport useBodyClass from '../hooks/useBodyClass';\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location, direction } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}\r\n    >\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Redirect to={APP_PREFIX_PATH + '/property-management'} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout direction={direction} location={location} />\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale, direction } = theme;\r\n  const { token } = auth;\r\n  return { locale, token, direction };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));\r\n","import React, { useEffect } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from 'react-css-theme-switcher';\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport { LOGIN_SUCCESS } from './actions/types';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  if (sessionStorage.token) {\r\n    setAuthToken(sessionStorage.token);\r\n    store.dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: {\r\n        token: sessionStorage.getItem('token'),\r\n        firstName: sessionStorage.getItem('firstName'),\r\n        lastName: sessionStorage.getItem('lastName'),\r\n        email: sessionStorage.getItem('email'),\r\n        id: sessionStorage.getItem('id'),\r\n        user_type: sessionStorage.getItem('user_type'),\r\n        phone_number: sessionStorage.getItem('phone_number'),\r\n      },\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    // store.dispatch(loadUser());\r\n  }, []);\r\n  return (\r\n    <div className='App'>\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider\r\n          themeMap={themes}\r\n          defaultTheme={THEME_CONFIG.currentTheme}\r\n          insertionPoint='styles-insertion-point'\r\n        >\r\n          <Router>\r\n            <Switch>\r\n              <Route path='/' component={Views} />\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}