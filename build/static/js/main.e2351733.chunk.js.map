{"version":3,"sources":["actions/types.js","configs/EnvironmentConfig.js","configs/AppConfig.js","apis/dashboard/Lead.js","apis/dashboard/Task.js","apis/dashboard/expense.js","components/shared-components/Flex/index.js","apis/dashboard/Project.js","apis/dashboard/Customer.js","apis/dashboard/User.js","apis/dashboard/Property.js","apis/dashboard/Meeting.js","apis/dashboard/transaction.js","apis/dashboard/Salary.js","apis/login/auth.js","utils/setAuthToken.js","redux/constants/Theme.js","constants/ThemeConstant.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavProfile.js","components/layout-components/HeaderNav.js","configs/NavigationConfig.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","hooks/useBodyClass.js","views/index.js","App.js","serviceWorker.js","index.js","redux/reducers/Auth.js","redux/reducers/Theme.js","redux/reducers/Property.js","redux/reducers/User.js","redux/reducers/Lead.js","redux/reducers/Task.js","redux/reducers/Meeting.js","redux/reducers/Expense.js","redux/reducers/Project.js","redux/reducers/Customer.js","redux/reducers/Transaction.js","redux/reducers/Salary.js","redux/reducers/index.js","redux/store/index.js"],"names":["BACKEND_URL","BACKEND_URL_MEDIA","BACKEND_URL_PDF","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT","SET_LOADING_FALSE","RESET_LOGIN_FAILED","SINGLE_SELF_USER","SET_ALERT_PROPERTY","LIST_PROPERTY_DATA","LOADING_LIST_PROPERTY","SET_SIGNLE_PROPERTY","SET_ALERT_USER","LIST_USER_DATA","LOADING_LIST_USER","SET_SIGNLE_USER","SET_ALERT_LEAD","LIST_LEAD_DATA","LIST_SOURCE_DATA","LIST_INTERACTION_DATA","LIST_ACTION_DATA","LOADING_LIST_LEAD","LOADING_LIST_SOURCE","LOADING_LIST_INTERACTION","LOADING_LIST_ACTION","SET_SIGNLE_LEAD","SET_SIGNLE_INTERACTION","SET_SIGNLE_ACTION","SET_ALERT_TASK","LIST_TASK_DATA","LIST_TASK_DATA_USERS","LOADING_LIST_TASK","LOADING_LIST_USER_TASK","SET_SIGNLE_TASK","SET_ALERT_MEETING","LIST_MEETING_DATA","LOADING_LIST_MEETING","SET_SIGNLE_MEETING","SET_ALERT_EXPENSE","LIST_EXPENSE_DATA","LOADING_LIST_EXPENSE","SET_SIGNLE_EXPENSE","LIST_EXPNSE_CATEGORY","SET_ALERT_PROJECT","LIST_PROJECT_DATA","LOADING_LIST_PROJECT","SET_SIGNLE_PROJECT","SET_ALERT_CUSTOMER","LIST_CUSTOMER_DATA","LOADING_LIST_CUSTOMER","SET_SIGNLE_CUSTOMER","SET_ALERT_TRANSACTION","LIST_TRANSACTION_DATA","LOADING_LIST_TRANSACTION","SET_SIGNLE_TRANSACTION","SET_ALERT_SALARY","LIST_SALARY_DATA","LOADING_LIST_SALARY","APP_NAME","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navType","sideNavTheme","navCollapsed","topNavColor","headerNavColor","locale","currentTheme","direction","userAlet","listLead","dispatch","a","type","payload","config","body","axios","method","url","data","headers","then","response","statuscode","Object","keys","store","getState","lead","singleData","length","filter","ele","id","catch","error","listSource","listInteraction","listAction","addSource","isError","isErrorType","errMessage","message","clearTimeout","setTimeout","addLead","editLead","deleteLead","addInteraction","lead_id","editInteraction","deleteInteraction","addAction","editAction","deleteAction","markAction","markLead","listTask","listTaskUser","addTask","editTask","deleteTask","updateTaskList","listExpenseCategory","listExpense","addExpenseCategory","addExpense","editExpense","deleteExpense","Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","listProjects","addProject","editProject","deleteProject","addPayment","project_id","editPayment","deletePayment","addExpenseP","editExpenseP","deleteExpenseP","addInvestor","editInvestor","deleteInvestor","addCommission","editCommission","deleteCommission","listCustomers","addCustomer","editCustomer","deleteCustomer","customer_id","addRepayment","editRepayment","deleteRepayment","markCustomer","listUser","addUser","editUser","flag","listSingleUser","passwordUpdate","passwordUpdateAdmin","deleteUser","propertyAlert","addProperty","formdata","videoData","addMedia","listProperty","deleteProperty","editProperty","listPropertybyId","isMedia","property_id","FormData","append","forEach","deletePropertyFile","property","downloadData","link","document","createElement","download","name","href","target","appendChild","click","removeChild","listMeeting","addMeeting","editMeeting","deleteMeeting","listTransaction","addTransaction","editTransaction","deleteTransaction","listSalary","salary","addons","advance","addSalary","addSalaryAddon","login","email","password","emailid","e","logout","sessionStorage","getItem","clear","forgotPassword","setAuthToken","token","defaults","common","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","DIRECTION_CHANGE","SIDE_NAV_WIDTH","NAV_TYPE_SIDE","NAV_TYPE_TOP","injectIntl","withRef","Icon","this","React","Component","Utils","initials","match","shift","pop","toUpperCase","navTree","path","route","p","hasOwnProperty","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","parseFloat","toFixed","outParts","Math","round","part","i","join","number","positive","negative","key","toLowerCase","list","value","item","input","searchText","screens","breakpoints","push","onMobileNavToggle","mobileNav","SubMenu","Menu","useBreakpoint","Grid","superUserNavTree","title","icon","ProjectOutlined","breadcrumb","submenu","FileAddOutlined","ClockCircleOutlined","IssuesCloseOutlined","UserSwitchOutlined","FileExcelOutlined","CalendarOutlined","AccountBookOutlined","active","ProfileOutlined","UsergroupAddOutlined","ContainerOutlined","userNavTree","setLocale","isLocaleOn","localeKey","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","user_type","isMobile","utils","getBreakPoint","includes","useState","navContent","setnavContent","useEffect","closeMobileNav","theme","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","paddingLeft","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","auth","Sider","Layout","width","collapsed","autoHide","getColorContrast","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","margin","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","menuItem","EditOutlined","state","first_name","last_name","role","profileImg","profileMenu","size","el","LogoutOutlined","overlay","trigger","marginTop","Header","toggleCollapsedNav","navMode","zIndex","MenuUnfoldOutlined","MenuFoldOutlined","nav","navigationConfig","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","slice","AppBreadcrumb","PageHeader","display","isAuthenticated","fallback","component","lazy","Content","AppLayout","currentRouteInfo","isNavSide","getLayoutGutter","status","useThemeSwitcher","history","useHistory","paddingRight","memo","AppViews","from","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","addBodyClass","classList","add","removeBodyClass","remove","currentAppLocale","Array","exact","themes","dark","process","light","App","firstName","lastName","phone_number","themeMap","defaultTheme","insertionPoint","Views","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","initialState","loading","authReducer","action","setItem","initTheme","propertyReducer","userReducer","source","sourceLoading","interaction","interactionLoading","singleInteraction","actionLoading","singleAction","loadingUser","dataUser","category","combineReducers","user","task","meeting","expense","project","customer","transaction","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware"],"mappings":"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","file":"static/js/main.e2351733.chunk.js","sourcesContent":["//Dev URL\r\nexport const BACKEND_URL = 'https://crm-backend.bodhirealestate.in/api/';\r\nexport const BACKEND_URL_MEDIA =\r\n  'https://crm-backend.bodhirealestate.in/uploads/';\r\nexport const FRONT_END_URL = 'https://crm-backend.bodhirealestate.in/uploads/';\r\nexport const BACKEND_URL_PDF =\r\n  'https://crm-backend.bodhirealestate.in/property/';\r\n\r\n// export const BACKEND_URL =\r\n//   'https://anis-property-backend.asifsayyed.com/api/';\r\n// export const BACKEND_URL_MEDIA =\r\n//   'https://anis-property-backend.asifsayyed.com/uploads/';\r\n// export const FRONT_END_URL =\r\n//   'https://anis-property-backend.asifsayyed.com/uploads/';\r\n// export const BACKEND_URL_PDF =\r\n//   'https://crm-backend.asifsayyed.com/property/';\r\n\r\n// export const BACKEND_URL = 'http://localhost:5000/api/';\r\n// export const BACKEND_URL_MEDIA = 'http://localhost:5000/uploads/';\r\n// export const FRONT_END_URL = 'http://localhost:5000/uploads/';\r\n// export const BACKEND_URL_PDF = 'http://localhost:5000/property/';\r\n//auth\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const OTP_FREEZE = 'OTP_FREEZE';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\nexport const TOKEN_CHECK = 'TOKEN_CHECK';\r\nexport const TOKEN_CHECK_FAIL = 'TOKEN_CHECK_FAIL';\r\nexport const LOGIN_ALERT_REMOVE = 'LOGIN_ALERT_REMOVE';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const RESET_SUCCESS = 'RESET_SUCCESS';\r\nexport const RESET_FAILED = 'RESET_FAILED';\r\nexport const GET_USER_DATA_BY_EMAIL = 'GET_USER_DATA_BY_EMAIL';\r\nexport const SET_LOADING_FALSE = 'SET_LOADING_FALSE';\r\nexport const SET_LOGOUT_PROVISION = 'SET_LOGOUT_PROVISION';\r\nexport const SET_LOADING_TRUE = 'SET_LOADING_TRUE';\r\nexport const RESET_LOGIN_FAILED = 'RESET_LOGIN_FAILED';\r\nexport const OTP_SETTING = 'OTP_SETTING';\r\nexport const OTP_FALSE = 'OTP_FALSE';\r\nexport const SET_DIVISION_ROLE = 'SET_DIVISION_ROLE';\r\nexport const SET_COMPANY_ROLE = 'SET_COMPANY_ROLE';\r\nexport const IDLE_TIMEOUT = 'IDLE_TIMEOUT';\r\nexport const SET_OTP_TIMEOUT = 'SET_OTP_TIMEOUT';\r\nexport const SET_CHECK_TOKEN_BOOL = 'SET_CHECK_TOKEN_BOOL';\r\nexport const RESET_IDLE_TIME = 'RESET_IDLE_TIME';\r\nexport const LIST_OF_ACTIVE_PROCESS = 'LIST_OF_ACTIVE_PROCESS';\r\nexport const SINGLE_SELF_USER = 'SINGLE_SELF_USER';\r\n\r\nexport const SET_ALERT_PROPERTY = 'SET_ALERT_PROPERTY';\r\nexport const LIST_PROPERTY_DATA = 'LIST_PROPERTY_DATA';\r\nexport const LOADING_LIST_PROPERTY = 'LOADING_LIST_PROPERTY';\r\nexport const SET_SIGNLE_PROPERTY = 'SET_SIGNLE_PROPERTY';\r\n\r\n//User\r\nexport const SET_ALERT_USER = 'SET_ALERT_USER';\r\nexport const LIST_USER_DATA = 'LIST_USER_DATA';\r\nexport const LOADING_LIST_USER = 'LOADING_LIST_USER';\r\nexport const SET_SIGNLE_USER = 'SET_SIGNLE_USER';\r\n\r\n//LEad\r\nexport const SET_ALERT_LEAD = 'SET_ALERT_LEAD';\r\nexport const LIST_LEAD_DATA = 'LIST_LEAD_DATA';\r\nexport const LIST_SOURCE_DATA = 'LIST_SOURCE_DATA';\r\nexport const LIST_INTERACTION_DATA = 'LIST_INTERACTION_DATA';\r\nexport const LIST_ACTION_DATA = 'LIST_ACTION_DATA';\r\nexport const LOADING_LIST_LEAD = 'LOADING_LIST_LEAD';\r\nexport const LOADING_LIST_SOURCE = 'LOADING_LIST_SOURCE';\r\nexport const LOADING_LIST_INTERACTION = 'LOADING_LIST_INTERACTION';\r\nexport const LOADING_LIST_ACTION = 'LOADING_LIST_ACTION';\r\nexport const SET_SIGNLE_LEAD = 'SET_SIGNLE_LEAD';\r\nexport const SET_SIGNLE_INTERACTION = 'SET_SIGNLE_INTERACTION';\r\nexport const SET_SIGNLE_ACTION = 'SET_SIGNLE_ACTION';\r\n\r\n//Task\r\nexport const SET_ALERT_TASK = 'SET_ALERT_TASK';\r\nexport const LIST_TASK_DATA = 'LIST_TASK_DATA';\r\nexport const LIST_TASK_DATA_USERS = 'LIST_TASK_DATA_USERS';\r\nexport const LOADING_LIST_TASK = 'LOADING_LIST_TASK';\r\nexport const LOADING_LIST_USER_TASK = 'LOADING_LIST_USER_TASK';\r\nexport const SET_SIGNLE_TASK = 'SET_SIGNLE_TASK';\r\n\r\n//Task\r\nexport const SET_ALERT_MEETING = 'SET_ALERT_MEETING';\r\nexport const LIST_MEETING_DATA = 'LIST_MEETING_DATA';\r\nexport const LOADING_LIST_MEETING = 'LOADING_LIST_MEETING';\r\nexport const SET_SIGNLE_MEETING = 'SET_SIGNLE_MEETING';\r\n\r\n//expense\r\nexport const SET_ALERT_EXPENSE = 'SET_ALERT_EXPENSE';\r\nexport const LIST_EXPENSE_DATA = 'LIST_EXPENSE_DATA';\r\nexport const LOADING_LIST_EXPENSE = 'LOADING_LIST_EXPENSE';\r\nexport const SET_SIGNLE_EXPENSE = 'SET_SIGNLE_EXPENSE';\r\nexport const LIST_EXPNSE_CATEGORY = 'LIST_EXPNSE_CATEGORY';\r\n\r\n//projects\r\nexport const SET_ALERT_PROJECT = 'SET_ALERT_PROJECT';\r\nexport const LIST_PROJECT_DATA = 'LIST_PROJECT_DATA';\r\nexport const LOADING_LIST_PROJECT = 'LOADING_LIST_PROJECT';\r\nexport const SET_SIGNLE_PROJECT = 'SET_SIGNLE_PROJECT';\r\n\r\n//customer\r\nexport const SET_ALERT_CUSTOMER = 'SET_ALERT_CUSTOMER';\r\nexport const LIST_CUSTOMER_DATA = 'LIST_CUSTOMER_DATA';\r\nexport const LOADING_LIST_CUSTOMER = 'LOADING_LIST_CUSTOMER';\r\nexport const SET_SIGNLE_CUSTOMER = 'SET_SIGNLE_CUSTOMER';\r\n\r\n//transacton\r\nexport const SET_ALERT_TRANSACTION = 'SET_ALERT_TRANSACTION';\r\nexport const LIST_TRANSACTION_DATA = 'LIST_TRANSACTION_DATA';\r\nexport const LOADING_LIST_TRANSACTION = 'LOADING_LIST_TRANSACTION';\r\nexport const SET_SIGNLE_TRANSACTION = 'SET_SIGNLE_TRANSACTION';\r\n\r\n//transacton\r\nexport const SET_ALERT_SALARY = 'SET_ALERT_SALARY';\r\nexport const LIST_SALARY_DATA = 'LIST_SALARY_DATA';\r\nexport const LOADING_LIST_SALARY = 'LOADING_LIST_SALARY';\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import { env } from './EnvironmentConfig';\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL;\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n  navType: 'SIDE',\r\n  sideNavTheme: 'SIDE_NAV_DARK',\r\n  navCollapsed: false,\r\n  topNavColor: '#1245A8',\r\n  headerNavColor: 'rgb(18, 69, 168)',\r\n  locale: 'en',\r\n  currentTheme: 'light',\r\n  direction: 'ltr',\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_ACTION_DATA,\r\n  LIST_INTERACTION_DATA,\r\n  LIST_LEAD_DATA,\r\n  LIST_SOURCE_DATA,\r\n  LOADING_LIST_ACTION,\r\n  LOADING_LIST_INTERACTION,\r\n  LOADING_LIST_LEAD,\r\n  LOADING_LIST_SOURCE,\r\n  SET_ALERT_LEAD,\r\n  SET_SIGNLE_LEAD,\r\n} from '../../actions/types';\r\nimport store from '../../redux/store';\r\n\r\nexport const listLead = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_LEAD, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'lead/list-lead',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        if (Object.keys(store.getState().lead.singleData).length > 0) {\r\n          dispatch({\r\n            type: SET_SIGNLE_LEAD,\r\n            payload:\r\n              response.data.data.filter(\r\n                (ele) => ele.id === store.getState().lead.singleData.id\r\n              ).length > 0\r\n                ? response.data.data.filter(\r\n                    (ele) => ele.id === store.getState().lead.singleData.id\r\n                  )[0]\r\n                : {},\r\n          });\r\n        }\r\n        dispatch({ type: LOADING_LIST_LEAD, payload: false });\r\n        dispatch({ type: LIST_LEAD_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_LEAD, payload: false });\r\n        dispatch({ type: LIST_LEAD_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_LEAD, payload: false });\r\n      dispatch({ type: LIST_LEAD_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nexport const listSource = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_SOURCE, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'source/list-source',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_SOURCE, payload: false });\r\n        dispatch({ type: LIST_SOURCE_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_SOURCE, payload: false });\r\n        dispatch({ type: LIST_SOURCE_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_SOURCE, payload: false });\r\n      dispatch({ type: LIST_SOURCE_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nexport const listInteraction = (data) => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_INTERACTION, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'interaction/list-lead-interaction',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_INTERACTION, payload: false });\r\n        dispatch({ type: LIST_INTERACTION_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_INTERACTION, payload: false });\r\n        dispatch({ type: LIST_INTERACTION_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_INTERACTION, payload: false });\r\n      dispatch({ type: LIST_INTERACTION_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nexport const listAction = (data) => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_ACTION, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'action/list-lead-action',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_ACTION, payload: false });\r\n        dispatch({ type: LIST_ACTION_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_ACTION, payload: false });\r\n        dispatch({ type: LIST_ACTION_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_ACTION, payload: false });\r\n      dispatch({ type: LIST_ACTION_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nexport const addSource = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'source/add-source',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listSource());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_SOURCE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const addLead = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'lead/add-lead',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editLead = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'lead/edit-lead',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nlet userAlet;\r\n\r\nexport const deleteLead = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'lead/delete-lead',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const addInteraction = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'interaction/add-interaction',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listInteraction({ lead_id: data.lead_id }));\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editInteraction = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'interaction/edit-interaction',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listInteraction({ lead_id: data.lead_id }));\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const deleteInteraction = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'interaction/delete-interaction',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listInteraction({ lead_id: data.lead_id }));\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const addAction = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'action/add-action',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listAction({ lead_id: data.lead_id }));\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editAction = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'action/edit-action',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listAction({ lead_id: data.lead_id }));\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const deleteAction = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'action/delete-action',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listAction({ lead_id: data.lead_id }));\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const markAction = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'action/update-action-status',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listAction({ lead_id: data.lead_id }));\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const markLead = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'lead/update-lead-status',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listLead());\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_LEAD,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_LEAD,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_LEAD,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_TASK_DATA,\r\n  LIST_TASK_DATA_USERS,\r\n  LOADING_LIST_TASK,\r\n  LOADING_LIST_USER_TASK,\r\n  SET_ALERT_TASK,\r\n} from '../../actions/types';\r\n\r\nexport const listTask = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_TASK, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'task/list-task',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_TASK, payload: false });\r\n        dispatch({ type: LIST_TASK_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_TASK, payload: false });\r\n        dispatch({ type: LIST_TASK_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_TASK, payload: false });\r\n      dispatch({ type: LIST_TASK_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nexport const listTaskUser = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_TASK, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'task/list-user-task',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_USER_TASK, payload: false });\r\n        dispatch({ type: LIST_TASK_DATA_USERS, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_USER_TASK, payload: false });\r\n        dispatch({ type: LIST_TASK_DATA_USERS, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_USER_TASK, payload: false });\r\n      dispatch({ type: LIST_TASK_DATA_USERS, payload: [] });\r\n    });\r\n};\r\n\r\nlet userAlet;\r\nexport const addTask = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'task/add-task',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listTask());\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TASK,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TASK,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_TASK,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editTask = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'task/edit-task',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listTask());\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TASK,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TASK,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_TASK,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const deleteTask = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'task/delete-task',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listTask());\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TASK,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TASK,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_TASK,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const updateTaskList = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'task/update-task',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listTask());\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TASK,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TASK,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_TASK,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_TASK,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_EXPENSE_DATA,\r\n  LIST_EXPNSE_CATEGORY,\r\n  LOADING_LIST_EXPENSE,\r\n  SET_ALERT_EXPENSE,\r\n} from '../../actions/types';\r\n\r\nexport const listExpenseCategory = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/list-expense-category',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LIST_EXPNSE_CATEGORY, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LIST_EXPNSE_CATEGORY, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LIST_EXPNSE_CATEGORY, payload: [] });\r\n    });\r\n};\r\n\r\nexport const listExpense = (data) => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_EXPENSE, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/list-expense',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_EXPENSE, payload: false });\r\n        dispatch({ type: LIST_EXPENSE_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_EXPENSE, payload: false });\r\n        dispatch({ type: LIST_EXPENSE_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_EXPENSE, payload: false });\r\n      dispatch({ type: LIST_EXPENSE_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nlet userAlet = null;\r\nexport const addExpenseCategory = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-expense-category',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listExpenseCategory());\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_EXPENSE,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_EXPENSE,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_EXPENSE,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const addExpense = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-expense',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listExpense());\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_EXPENSE,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_EXPENSE,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_EXPENSE,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\nexport const editExpense = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-expense',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listExpense());\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_EXPENSE,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_EXPENSE,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_EXPENSE,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const deleteExpense = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-expense',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listExpense());\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_EXPENSE,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_EXPENSE,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_EXPENSE,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_EXPENSE,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_PROJECT_DATA,\r\n  LOADING_LIST_PROJECT,\r\n  SET_ALERT_PROJECT,\r\n  SET_SIGNLE_PROJECT,\r\n} from '../../actions/types';\r\n\r\nexport const listProjects =\r\n  (id = null) =>\r\n  async (dispatch) => {\r\n    dispatch({ type: LOADING_LIST_PROJECT, payload: true });\r\n    const config = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    await axios({\r\n      method: 'POST',\r\n      url: BACKEND_URL + 'account/list-project',\r\n      headers: config,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.statuscode === 200) {\r\n          dispatch({ type: LOADING_LIST_PROJECT, payload: false });\r\n          dispatch({ type: LIST_PROJECT_DATA, payload: response.data.data });\r\n          if (id !== null) {\r\n            dispatch({\r\n              type: SET_SIGNLE_PROJECT,\r\n              payload: response.data.data.filter((ele) => ele.id === id)[0],\r\n            });\r\n          }\r\n        } else {\r\n          dispatch({ type: LOADING_LIST_PROJECT, payload: false });\r\n          dispatch({ type: LIST_PROJECT_DATA, payload: [] });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch({ type: LOADING_LIST_PROJECT, payload: false });\r\n        dispatch({ type: LIST_PROJECT_DATA, payload: [] });\r\n      });\r\n  };\r\n\r\nlet userAlet = null;\r\nexport const addProject = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-project',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(response.data.data));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\nexport const editProject = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-project',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const deleteProject = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-project',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects());\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const addPayment = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-payment',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const editPayment = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-payment',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const deletePayment = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-payment',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const addExpenseP = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-project-expense',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const editExpenseP = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-project-expense',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const deleteExpenseP = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-project-expense',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const addInvestor = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-investor',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const editInvestor = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-investor',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const deleteInvestor = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-investor',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const addCommission = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-commission',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const editCommission = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-commission',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const deleteCommission = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-commission',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProjects(data.project_id));\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROJECT,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROJECT,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROJECT,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_CUSTOMER_DATA,\r\n  LOADING_LIST_CUSTOMER,\r\n  SET_ALERT_CUSTOMER,\r\n  SET_SIGNLE_CUSTOMER,\r\n} from '../../actions/types';\r\n\r\nexport const listCustomers =\r\n  (id = null) =>\r\n  async (dispatch) => {\r\n    dispatch({ type: LOADING_LIST_CUSTOMER, payload: true });\r\n    const config = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    await axios({\r\n      method: 'POST',\r\n      url: BACKEND_URL + 'account/list-customer',\r\n      headers: config,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.statuscode === 200) {\r\n          dispatch({ type: LOADING_LIST_CUSTOMER, payload: false });\r\n          dispatch({ type: LIST_CUSTOMER_DATA, payload: response.data.data });\r\n          if (id !== null) {\r\n            dispatch({\r\n              type: SET_SIGNLE_CUSTOMER,\r\n              payload: response.data.data.filter((ele) => ele.id === id)[0],\r\n            });\r\n          }\r\n        } else {\r\n          dispatch({ type: LOADING_LIST_CUSTOMER, payload: false });\r\n          dispatch({ type: LIST_CUSTOMER_DATA, payload: [] });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch({ type: LOADING_LIST_CUSTOMER, payload: false });\r\n        dispatch({ type: LIST_CUSTOMER_DATA, payload: [] });\r\n      });\r\n  };\r\n\r\nlet userAlet = null;\r\nexport const addCustomer = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-customer',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(response.data.data));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\nexport const editCustomer = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-customer',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const deleteCustomer = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-customer',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers());\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const addPayment = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-payment',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const editPayment = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-payment',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const deletePayment = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-payment',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const addExpenseP = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-customer-expense',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const editExpenseP = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-customer-expense',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const deleteExpenseP = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-customer-expense',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const addRepayment = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-customer-repayment',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const editRepayment = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-customer-repayment',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const deleteRepayment = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-customer-repayment',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const addCommission = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-commission',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const editCommission = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-commission',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const deleteCommission = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-commission',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.customer_id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n\r\nexport const markCustomer = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-customer-status',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listCustomers(data.id));\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_CUSTOMER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 100);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_CUSTOMER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_CUSTOMER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 100);\r\n    });\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_USER_DATA,\r\n  LOADING_LIST_USER,\r\n  SET_ALERT_USER,\r\n  SINGLE_SELF_USER,\r\n} from '../../actions/types';\r\n\r\nexport const listUser = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_USER, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/list-user',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_USER, payload: false });\r\n        dispatch({ type: LIST_USER_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_USER, payload: false });\r\n        dispatch({ type: LIST_USER_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_USER, payload: false });\r\n      dispatch({ type: LIST_USER_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nlet userAlet;\r\nexport const addUser = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/add-user',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listUser());\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editUser =\r\n  (data, flag = false) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    const body = data;\r\n    await axios({\r\n      method: 'POST',\r\n      url: BACKEND_URL + 'user/edit-user',\r\n      data: body,\r\n      headers: config,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.statuscode === 200) {\r\n          if (flag) {\r\n            dispatch(listSingleUser(data.id));\r\n          } else {\r\n            dispatch(listUser());\r\n          }\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: true,\r\n              isErrorType: 'SUCCESS',\r\n              errMessage: response.data.message,\r\n            },\r\n          });\r\n          clearTimeout(userAlet);\r\n          userAlet = setTimeout(() => {\r\n            dispatch({\r\n              type: SET_ALERT_USER,\r\n              payload: {\r\n                isError: false,\r\n                isErrorType: null,\r\n                errMessage: null,\r\n              },\r\n            });\r\n          }, 1000);\r\n        } else {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: true,\r\n              isErrorType: 'FAIL',\r\n              errMessage: response.data.message,\r\n            },\r\n          });\r\n          clearTimeout(userAlet);\r\n          userAlet = setTimeout(() => {\r\n            dispatch({\r\n              type: SET_ALERT_USER,\r\n              payload: {\r\n                isError: false,\r\n                isErrorType: null,\r\n                errMessage: null,\r\n              },\r\n            });\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: 'Something went wrong! Please try again later',\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      });\r\n  };\r\n\r\nexport const passwordUpdate = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/update-password',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const passwordUpdateAdmin = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/update-password-admin',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const deleteUser = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/delete-user',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listUser());\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const listSingleUser = (id) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { id: id };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/list-user-by-id',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: SINGLE_SELF_USER, payload: response.data.data });\r\n      }\r\n    })\r\n    .catch((error) => {});\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  BACKEND_URL_PDF,\r\n  LIST_PROPERTY_DATA,\r\n  LOADING_LIST_PROPERTY,\r\n  SET_ALERT_PROPERTY,\r\n  SET_SIGNLE_PROPERTY,\r\n} from '../../actions/types';\r\n\r\nlet propertyAlert;\r\nexport const addProperty = (data, formdata, videoData) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/add-property',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        if (formdata.length > 0) {\r\n          dispatch(addMedia(formdata, 'image', response.data.data));\r\n        }\r\n        if (videoData.length > 0) {\r\n          dispatch(addMedia(videoData, 'video', response.data.data));\r\n        }\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROPERTY,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(propertyAlert);\r\n      propertyAlert = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const listProperty = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_PROPERTY, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/list-property',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_PROPERTY, payload: false });\r\n        dispatch({ type: LIST_PROPERTY_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_PROPERTY, payload: false });\r\n        dispatch({ type: LIST_PROPERTY_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_PROPERTY, payload: false });\r\n      dispatch({ type: LIST_PROPERTY_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nexport const deleteProperty = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/delete-property',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProperty());\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROPERTY,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(propertyAlert);\r\n      propertyAlert = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editProperty = (data, formdata, videoData) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/edit-property',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listPropertybyId(data.id));\r\n        if (formdata.length > 0) {\r\n          dispatch(addMedia(formdata, 'image', response.data.data));\r\n        }\r\n        if (videoData.length > 0) {\r\n          dispatch(addMedia(videoData, 'video', response.data.data));\r\n        }\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROPERTY,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(propertyAlert);\r\n      propertyAlert = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const addMedia =\r\n  (formdata, isMedia, property_id) => async (dispatch) => {\r\n    var body = new FormData();\r\n    body.append('mediaType', isMedia);\r\n    body.append('property_id', property_id);\r\n    formdata.forEach((ele) => {\r\n      body.append('files', ele);\r\n    });\r\n    const config = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    await axios({\r\n      method: 'POST',\r\n      url: BACKEND_URL + 'property/add-property-files',\r\n      data: body,\r\n      headers: config,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.statuscode === 200) {\r\n          dispatch(listPropertybyId(property_id));\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\nexport const deletePropertyFile = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/delete-file',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listPropertybyId(data.property));\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROPERTY,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(propertyAlert);\r\n      propertyAlert = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const listPropertybyId = (id) => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_PROPERTY, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { id };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/property-by-id',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: SET_SIGNLE_PROPERTY,\r\n          payload: response.data.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: SET_SIGNLE_PROPERTY,\r\n          payload: {},\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_SIGNLE_PROPERTY,\r\n        payload: {},\r\n      });\r\n    });\r\n};\r\n\r\nexport const downloadData = (id) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { id: id };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/download-file',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        var link = document.createElement('a');\r\n        link.download = response.data.name;\r\n        link.href = BACKEND_URL_PDF + response.data.data;\r\n        link.target = '_blank'\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      } else {\r\n      }\r\n    })\r\n    .catch((error) => {});\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_MEETING_DATA,\r\n  LOADING_LIST_MEETING,\r\n  SET_ALERT_MEETING,\r\n} from '../../actions/types';\r\n\r\nexport const listMeeting = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_MEETING, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'meeting/list-meeting',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_MEETING, payload: false });\r\n        dispatch({ type: LIST_MEETING_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_MEETING, payload: false });\r\n        dispatch({ type: LIST_MEETING_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_MEETING, payload: false });\r\n      dispatch({ type: LIST_MEETING_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nlet userAlet;\r\nexport const addMeeting = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'meeting/add-meeting',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listMeeting());\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_MEETING,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editMeeting = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'meeting/edit-meeting',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listMeeting());\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_MEETING,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const deleteMeeting = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'meeting/delete-meeting',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listMeeting());\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_MEETING,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_MEETING,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_MEETING,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_TRANSACTION_DATA,\r\n  LOADING_LIST_TRANSACTION,\r\n  SET_ALERT_TRANSACTION,\r\n} from '../../actions/types';\r\n\r\nexport const listTransaction = (data) => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_TRANSACTION, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/list-transaction',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_TRANSACTION, payload: false });\r\n        dispatch({ type: LIST_TRANSACTION_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_TRANSACTION, payload: false });\r\n        dispatch({ type: LIST_TRANSACTION_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_TRANSACTION, payload: false });\r\n      dispatch({ type: LIST_TRANSACTION_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nlet userAlet = null;\r\n\r\nexport const addTransaction = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/add-transaction',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listTransaction());\r\n        dispatch({\r\n          type: SET_ALERT_TRANSACTION,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TRANSACTION,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_TRANSACTION,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TRANSACTION,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_TRANSACTION,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_TRANSACTION,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editTransaction = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/edit-transaction',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listTransaction());\r\n        dispatch({\r\n          type: SET_ALERT_TRANSACTION,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TRANSACTION,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_TRANSACTION,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TRANSACTION,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_TRANSACTION,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_TRANSACTION,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const deleteTransaction = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'account/delete-transaction',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listTransaction());\r\n        dispatch({\r\n          type: SET_ALERT_TRANSACTION,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS_EXPENSE',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TRANSACTION,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_TRANSACTION,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_TRANSACTION,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_TRANSACTION,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_TRANSACTION,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_SALARY_DATA,\r\n  LOADING_LIST_SALARY,\r\n  SET_ALERT_SALARY,\r\n} from '../../actions/types';\r\n\r\nexport const listSalary = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_SALARY, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'salary/list-salary',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_SALARY, payload: false });\r\n        dispatch({\r\n          type: LIST_SALARY_DATA,\r\n          payload: {\r\n            salary: response.data.data,\r\n            addons: response.data.addons,\r\n            advance: response.data.advance,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_SALARY, payload: false });\r\n        dispatch({\r\n          type: LIST_SALARY_DATA,\r\n          payload: {\r\n            salary: [],\r\n            addons: [],\r\n            advance: [],\r\n          },\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_SALARY, payload: false });\r\n      dispatch({\r\n        type: LIST_SALARY_DATA,\r\n        payload: {\r\n          salary: [],\r\n          addons: [],\r\n          advance: [],\r\n        },\r\n      });\r\n    });\r\n};\r\n\r\nexport const addSalary = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'salary/add-salary',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listSalary());\r\n        dispatch({\r\n          type: SET_ALERT_SALARY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_SALARY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_SALARY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_SALARY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_SALARY,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_SALARY,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const addSalaryAddon = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'salary/add-salary-addons',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listSalary());\r\n        dispatch({\r\n          type: SET_ALERT_SALARY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_SALARY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_SALARY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_SALARY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_SALARY,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_SALARY,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  LOGIN_FAILED,\r\n  LOGOUT,\r\n  BACKEND_URL,\r\n  RESET_LOGIN_FAILED,\r\n  LOGIN_SUCCESS,\r\n} from '../../actions/types';\r\n\r\n//Login user\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { emailid: email, password: password };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/login',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: response.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAILED,\r\n          payload: { message: response.data.message, type: 'LOGIN' },\r\n        });\r\n        setTimeout((e) => {\r\n          dispatch({ type: RESET_LOGIN_FAILED });\r\n        }, 6000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n        payload: { message: 'server error', type: 'LOGIN' },\r\n      });\r\n    });\r\n};\r\n\r\n//LOGOUT\r\nexport const logout = () => async (dispatch) => {\r\n  if (sessionStorage.getItem('token') === null) {\r\n    return;\r\n  }\r\n  await dispatch({ type: LOGOUT });\r\n  sessionStorage.clear();\r\n};\r\n\r\n//forgot password\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { emailid: email };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/email-password',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: LOGIN_FAILED,\r\n          payload: { message: response.data.message, type: 'RESET_SUCCESS' },\r\n        });\r\n        setTimeout((e) => {\r\n          dispatch({ type: RESET_LOGIN_FAILED });\r\n        }, 6000);\r\n      } else {\r\n        dispatch({\r\n          type: LOGIN_FAILED,\r\n          payload: { message: response.data.message, type: 'RESET_FAILED' },\r\n        });\r\n        setTimeout((e) => {\r\n          dispatch({ type: RESET_LOGIN_FAILED });\r\n        }, 6000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n        payload: { message: 'Server error', type: 'RESET_FAILED' },\r\n      });\r\n      setTimeout((e) => {\r\n        dispatch({ type: RESET_LOGIN_FAILED });\r\n      }, 6000);\r\n    });\r\n};\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = async (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\nexport default setAuthToken;\r\n","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';\r\nexport const DIRECTION_CHANGE = 'DIRECTION_CHANGE';","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\nexport const DIR_LTR = 'ltr'\r\nexport const DIR_RTL = 'rtl'\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","class Utils {\r\n  /**\r\n   * Get first character from first & last sentences of a username\r\n   * @param {String} name - Username\r\n   * @return {String} 2 characters string\r\n   */\r\n  static getNameInitial(name) {\r\n    let initials = name.match(/\\b\\w/g) || [];\r\n    return ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * Get current path related object from Navigation Tree\r\n   * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n   * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n   * @return {Object} object that contained the path string\r\n   */\r\n  static getRouteInfo(navTree, path) {\r\n    if (navTree.path === path) {\r\n      return navTree;\r\n    }\r\n    let route;\r\n    for (let p in navTree) {\r\n      if (navTree.hasOwnProperty(p) && typeof navTree[p] === 'object') {\r\n        route = this.getRouteInfo(navTree[p], path);\r\n        if (route) {\r\n          return route;\r\n        }\r\n      }\r\n    }\r\n    return route;\r\n  }\r\n\r\n  /**\r\n   * Get accessible color contrast\r\n   * @param {String} hex - Hex color code e.g '#3e82f7'\r\n   * @return {String} 'dark' or 'light'\r\n   */\r\n  static getColorContrast(hex) {\r\n    if (!hex) {\r\n      return 'dark';\r\n    }\r\n    const threshold = 130;\r\n    const hRed = hexToR(hex);\r\n    const hGreen = hexToG(hex);\r\n    const hBlue = hexToB(hex);\r\n    function hexToR(h) {\r\n      return parseInt(cutHex(h).substring(0, 2), 16);\r\n    }\r\n    function hexToG(h) {\r\n      return parseInt(cutHex(h).substring(2, 4), 16);\r\n    }\r\n    function hexToB(h) {\r\n      return parseInt(cutHex(h).substring(4, 6), 16);\r\n    }\r\n    function cutHex(h) {\r\n      return h.charAt(0) === '#' ? h.substring(1, 7) : h;\r\n    }\r\n    const cBrightness = (hRed * 299 + hGreen * 587 + hBlue * 114) / 1000;\r\n    if (cBrightness > threshold) {\r\n      return 'dark';\r\n    } else {\r\n      return 'light';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Darken or lighten a hex color\r\n   * @param {String} color - Hex color code e.g '#3e82f7'\r\n   * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n   * @return {String} Darken or lighten color\r\n   */\r\n  static shadeColor(color, percent) {\r\n    let R = parseInt(color.substring(1, 3), 16);\r\n    let G = parseInt(color.substring(3, 5), 16);\r\n    let B = parseInt(color.substring(5, 7), 16);\r\n    R = parseInt((R * (100 + percent)) / 100);\r\n    G = parseInt((G * (100 + percent)) / 100);\r\n    B = parseInt((B * (100 + percent)) / 100);\r\n    R = R < 255 ? R : 255;\r\n    G = G < 255 ? G : 255;\r\n    B = B < 255 ? B : 255;\r\n    const RR =\r\n      R.toString(16).length === 1 ? `0${R.toString(16)}` : R.toString(16);\r\n    const GG =\r\n      G.toString(16).length === 1 ? `0${G.toString(16)}` : G.toString(16);\r\n    const BB =\r\n      B.toString(16).length === 1 ? `0${B.toString(16)}` : B.toString(16);\r\n    return `#${RR}${GG}${BB}`;\r\n  }\r\n\r\n  /**\r\n   * Convert RGBA to HEX\r\n   * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n   * @return {String} HEX color\r\n   */\r\n  static rgbaToHex(rgba) {\r\n    const trim = (str) => str.replace(/^\\s+|\\s+$/gm, '');\r\n    const inParts = rgba.substring(rgba.indexOf('(')).split(','),\r\n      r = parseInt(trim(inParts[0].substring(1)), 10),\r\n      g = parseInt(trim(inParts[1]), 10),\r\n      b = parseInt(trim(inParts[2]), 10),\r\n      a = parseFloat(\r\n        trim(inParts[3].substring(0, inParts[3].length - 1))\r\n      ).toFixed(2);\r\n    const outParts = [\r\n      r.toString(16),\r\n      g.toString(16),\r\n      b.toString(16),\r\n      Math.round(a * 255)\r\n        .toString(16)\r\n        .substring(0, 2),\r\n    ];\r\n\r\n    outParts.forEach(function (part, i) {\r\n      if (part.length === 1) {\r\n        outParts[i] = '0' + part;\r\n      }\r\n    });\r\n    return `#${outParts.join('')}`;\r\n  }\r\n\r\n  /**\r\n   * Returns either a positive or negative\r\n   * @param {Number} number - number value\r\n   * @param {any} positive - value that return when positive\r\n   * @param {any} negative - value that return when negative\r\n   * @return {any} positive or negative value based on param\r\n   */\r\n  static getSignNum(number, positive, negative) {\r\n    if (number > 0) {\r\n      return positive;\r\n    }\r\n    if (number < 0) {\r\n      return negative;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns either ascending or descending value\r\n   * @param {Object} a - antd Table sorter param a\r\n   * @param {Object} b - antd Table sorter param b\r\n   * @param {String} key - object key for compare\r\n   * @return {any} a value minus b value\r\n   */\r\n  static antdTableSorter(a, b, key) {\r\n    if (typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n      return a[key] - b[key];\r\n    }\r\n\r\n    if (typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n      a = a[key].toLowerCase();\r\n      b = b[key].toLowerCase();\r\n      return a > b ? -1 : b > a ? 1 : 0;\r\n    }\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Filter array of object\r\n   * @param {Array} list - array of objects that need to filter\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - value that excluded from filter\r\n   * @return {Array} a value minus b value\r\n   */\r\n  static filterArray(list, key, value) {\r\n    let data = list;\r\n    if (list) {\r\n      data = list.filter((item) => item[key] === value);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Remove object from array by value\r\n   * @param {Array} list - array of objects\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - target value\r\n   * @return {Array} Array that removed target object\r\n   */\r\n  static deleteArrayRow(list, key, value) {\r\n    let data = list;\r\n    if (list) {\r\n      data = list.filter((item) => item[key] !== value);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Wild card search on all property of the object\r\n   * @param {Number | String} input - any value to search\r\n   * @param {Array} list - array for search\r\n   * @return {Array} array of object contained keyword\r\n   */\r\n  static wildCardSearch(list, input) {\r\n    const searchText = (item) => {\r\n      for (let key in item) {\r\n        if (item[key] == null) {\r\n          continue;\r\n        }\r\n        if (\r\n          item[key]\r\n            .toString()\r\n            .toUpperCase()\r\n            .indexOf(input.toString().toUpperCase()) !== -1\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    };\r\n    list = list.filter((value) => searchText(value));\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Get Breakpoint\r\n   * @param {Object} screens - Grid.useBreakpoint() from antd\r\n   * @return {Array} array of breakpoint size\r\n   */\r\n  static getBreakPoint(screens) {\r\n    let breakpoints = [];\r\n    for (const key in screens) {\r\n      if (screens.hasOwnProperty(key)) {\r\n        const element = screens[key];\r\n        if (element) {\r\n          breakpoints.push(key);\r\n        }\r\n      }\r\n    }\r\n    return breakpoints;\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n\r\nexport function onDirectionChange(direction) {\r\n  return {\r\n    type: DIRECTION_CHANGE,\r\n    direction\r\n  };\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from '../../constants/ThemeConstant';\r\nimport utils from '../../utils';\r\nimport { onMobileNavToggle } from '../../redux/actions/Theme';\r\nimport {\r\n  ProjectOutlined,\r\n  FileAddOutlined,\r\n  UserSwitchOutlined,\r\n  ClockCircleOutlined,\r\n  IssuesCloseOutlined,\r\n  CalendarOutlined,\r\n  AccountBookOutlined,\r\n  ContainerOutlined,\r\n  UsergroupAddOutlined,\r\n  ProfileOutlined,\r\n  FileExcelOutlined,\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from '../../configs/AppConfig';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst superUserNavTree = [\r\n  {\r\n    key: 'general-settings',\r\n    path: `${APP_PREFIX_PATH}/`,\r\n    title: 'sidenav.general-settings',\r\n    icon: ProjectOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: 'property-management',\r\n        path: `${APP_PREFIX_PATH}/property-management`,\r\n        title: 'sidenav.property-management',\r\n        icon: ProjectOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'lead-management',\r\n        path: `${APP_PREFIX_PATH}/lead-management`,\r\n        title: 'sidenav.lead-management',\r\n        icon: FileAddOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'task-management',\r\n        path: `${APP_PREFIX_PATH}/task-management`,\r\n        title: 'sidenav.task-management',\r\n        icon: ClockCircleOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'my-task',\r\n        path: `${APP_PREFIX_PATH}/my-task`,\r\n        title: 'sidenav.my-task',\r\n        icon: IssuesCloseOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'user-management',\r\n        path: `${APP_PREFIX_PATH}/user-management`,\r\n        title: 'sidenav.user-management',\r\n        icon: UserSwitchOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'salary-management',\r\n        path: `${APP_PREFIX_PATH}/salary-management`,\r\n        title: 'sidenav.salary-management',\r\n        icon: FileExcelOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'meeting-schedule',\r\n        path: `${APP_PREFIX_PATH}/meeting-schedule`,\r\n        title: 'sidenav.schedule-meeting',\r\n        icon: CalendarOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'account-management',\r\n        path: `${APP_PREFIX_PATH}/account-management`,\r\n        title: 'sidenav.account-management',\r\n        icon: AccountBookOutlined,\r\n        breadcrumb: true,\r\n        active: true,\r\n        submenu: [\r\n          {\r\n            key: 'Project Management',\r\n            path: `${APP_PREFIX_PATH}/project-management`,\r\n            title: 'sidenav.project-management',\r\n            icon: ProfileOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'Customer Management',\r\n            path: `${APP_PREFIX_PATH}/customer-management`,\r\n            title: 'sidenav.customer-management',\r\n            icon: UsergroupAddOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'Expense Management',\r\n            path: `${APP_PREFIX_PATH}/expense-management`,\r\n            title: 'sidenav.expense-management',\r\n            icon: ContainerOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'Transaction',\r\n            path: `${APP_PREFIX_PATH}/transaction`,\r\n            title: 'sidenav.transaction',\r\n            icon: ContainerOutlined,\r\n            breadcrumb: true,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst userNavTree = [\r\n  {\r\n    key: 'general-settings',\r\n    path: `${APP_PREFIX_PATH}/`,\r\n    title: 'sidenav.general-settings',\r\n    icon: ProjectOutlined,\r\n    breadcrumb: true,\r\n    submenu: [\r\n      {\r\n        key: 'property-management',\r\n        path: `${APP_PREFIX_PATH}/property-management`,\r\n        title: 'sidenav.property-management',\r\n        icon: ProjectOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'lead-management',\r\n        path: `${APP_PREFIX_PATH}/lead-management`,\r\n        title: 'sidenav.lead-management',\r\n        icon: FileAddOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'my-task',\r\n        path: `${APP_PREFIX_PATH}/my-task`,\r\n        title: 'sidenav.my-task',\r\n        icon: IssuesCloseOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'meeting-schedule',\r\n        path: `${APP_PREFIX_PATH}/meeting-schedule`,\r\n        title: 'sidenav.schedule-meeting',\r\n        icon: CalendarOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = '';\r\n  if (key) {\r\n    const arr = key.split('-');\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n  const {\r\n    sideNavTheme,\r\n    routeInfo,\r\n    hideGroupTitle,\r\n    localization,\r\n    onMobileNavToggle,\r\n    user_type,\r\n  } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n  const [navContent, setnavContent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user_type === 'USER') {\r\n      setnavContent(userNavTree);\r\n    } else {\r\n      setnavContent(superUserNavTree);\r\n    }\r\n  }, [user_type]);\r\n\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      onMobileNavToggle(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? 'light' : 'dark'}\r\n      mode='inline'\r\n      style={{ height: '100%', borderRight: 0 }}\r\n      defaultSelectedKeys={['property-management']}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? 'hide-group-title' : 'tt'}\r\n    >\r\n      {navContent.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item\r\n                      key={subMenuSecond.key}\r\n                      style={{ paddingLeft: '34px' }}\r\n                    >\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link\r\n                        onClick={() => closeMobileNav()}\r\n                        to={subMenuSecond.path}\r\n                      />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link\r\n                    onClick={() => closeMobileNav()}\r\n                    to={subMenuFirst.path}\r\n                  />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? (\r\n              <Link onClick={() => closeMobileNav()} to={menu.path} />\r\n            ) : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  const [navContent, setnavContent] = useState([]);\r\n  useEffect(() => {\r\n    setnavContent(superUserNavTree);\r\n  }, []);\r\n\r\n  return (\r\n    <Menu mode='horizontal' style={{ backgroundColor: topNavColor }}>\r\n      {navContent.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName='top-nav-menu'\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  popupClassName='top-nav-menu'\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  const { user_type } = auth;\r\n  return {\r\n    sideNavTheme,\r\n    topNavColor,\r\n    user_type,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from '../../constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from '../../constants/ThemeConstant';\r\nimport utils from '../../utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react';\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_TOP,\r\n} from '../../constants/ThemeConstant';\r\nimport { APP_NAME } from '../../configs/AppConfig';\r\nimport { connect } from 'react-redux';\r\nimport utils from '../../utils';\r\nimport { Grid } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  if (isMobile && !props.mobileLogo) {\r\n    return 0;\r\n  }\r\n  if (isNavTop) {\r\n    return 'auto';\r\n  }\r\n  if (navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`;\r\n  }\r\n};\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if (logoType === 'light') {\r\n    if (navCollapsed) {\r\n      return '/img/logo-white.png';\r\n    }\r\n    return '/img/logo-white.png';\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-white.png';\r\n  }\r\n  return '/img/logo-white.png';\r\n};\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if (isMobile && !mobileLogo) {\r\n    return 'd-none';\r\n  } else {\r\n    return 'logo';\r\n  }\r\n};\r\n\r\nexport const Logo = (props) => {\r\n  const { navCollapsed } = props;\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n  return (\r\n    <Link to='/app/property-management'\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)}\r\n      style={{ width: `${getLogoWidthGutter(props, isMobile)}` }}\r\n    >\r\n      <img\r\n        src={getLogo(props)}\r\n        alt={`${APP_NAME} logo`}\r\n        style={{ height: navCollapsed ? '20px' : '50px', margin: 'auto' }}\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } = theme;\r\n  return { navCollapsed, navType };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"../../constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"../../redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"../../components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React from 'react';\r\nimport { Menu, Dropdown, Avatar } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { EditOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport Icon from '../../components/util-components/Icon';\r\nimport { logout } from '../../apis/login/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst menuItem = [\r\n  {\r\n    title: 'Edit Profile',\r\n    icon: EditOutlined,\r\n    path: '/app/user-profile',\r\n  },\r\n\r\n  // {\r\n  //   title: 'Account Setting',\r\n  //   icon: SettingOutlined,\r\n  //   path: '/',\r\n  // },\r\n  // {\r\n  //   title: 'Help Center',\r\n  //   icon: QuestionCircleOutlined,\r\n  //   path: '/',\r\n  // },\r\n];\r\n\r\nexport const NavProfile = ({ logout, first_name, last_name, role }) => {\r\n  const profileImg = '/img/avatars/thumb-1.png';\r\n  const profileMenu = (\r\n    <div className='nav-profile nav-dropdown'>\r\n      <div className='nav-profile-header'>\r\n        <div className='d-flex'>\r\n          <Avatar size={45} src={profileImg} />\r\n          <div className='pl-3'>\r\n            <h4 className='mb-0'>\r\n              {first_name} {last_name}\r\n            </h4>\r\n            <span className='text-muted'>{role}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='nav-profile-body'>\r\n        <Menu>\r\n          {menuItem.map((el, i) => {\r\n            return (\r\n              <Menu.Item key={i}>\r\n                <Link to={el.path}>\r\n                  <Icon type={el.icon} />\r\n                  <span className='font-weight-normal'>{el.title}</span>\r\n                </Link>\r\n              </Menu.Item>\r\n            );\r\n          })}\r\n          <Menu.Item key={menuItem.length + 1} onClick={(e) => logout()}>\r\n            <span>\r\n              <LogoutOutlined />\r\n              <span className='font-weight-normal'>Sign Out</span>\r\n            </span>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n  return (\r\n    <Dropdown placement='bottomRight' overlay={profileMenu} trigger={['click']}>\r\n      <Menu className='d-flex align-item-center' mode='horizontal'>\r\n        <Menu.Item key='profile'>\r\n          <Avatar src={profileImg} style={{ marginTop: '-10px' }} />\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nNavProfile.propTypes = {};\r\nconst mapStateToProps = (state) => ({\r\n  first_name: state.auth.first_name,\r\n  last_name: state.auth.last_name,\r\n  role: state.auth.user_type,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(NavProfile);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Layout } from 'antd';\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\n// import NavNotification from './NavNotification';\r\nimport NavProfile from './NavProfile';\r\n\r\nimport {\r\n  toggleCollapsedNav,\r\n  onMobileNavToggle,\r\n} from '../../redux/actions/Theme';\r\nimport {\r\n  NAV_TYPE_TOP,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  SIDE_NAV_WIDTH,\r\n} from '../../constants/ThemeConstant';\r\nimport utils from '../../utils';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = (props) => {\r\n  const {\r\n    navCollapsed,\r\n    mobileNav,\r\n    navType,\r\n    headerNavColor,\r\n    toggleCollapsedNav,\r\n    onMobileNavToggle,\r\n    isMobile,\r\n    currentTheme,\r\n  } = props;\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed);\r\n    } else {\r\n      onMobileNavToggle(!mobileNav);\r\n    }\r\n  };\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\r\n  const mode = () => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(\r\n        currentTheme === 'dark' ? '#00000' : '#ffffff'\r\n      );\r\n    }\r\n    return utils.getColorContrast(headerNavColor);\r\n  };\r\n  const navMode = mode();\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return '0px';\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Header\r\n      className={`app-header ${navMode}`}\r\n      style={{ backgroundColor: headerNavColor, zIndex: '999' }}\r\n    >\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode} />\r\n        <div className='nav' style={{ width: `calc(100% - ${getNavWidth()})` }}>\r\n          <div className='nav-left'>\r\n            <ul className='ant-menu ant-menu-root ant-menu-horizontal'>\r\n              {isNavTop && !isMobile ? null : (\r\n                <li\r\n                  className='ant-menu-item ant-menu-item-only-child'\r\n                  onClick={() => {\r\n                    onToggle();\r\n                  }}\r\n                >\r\n                  {navCollapsed || isMobile ? (\r\n                    <MenuUnfoldOutlined className='nav-icon' />\r\n                  ) : (\r\n                    <MenuFoldOutlined className='nav-icon' />\r\n                  )}\r\n                </li>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div className='nav-right'>\r\n            {/* <NavNotification /> */}\r\n            <NavProfile />\r\n            {/* <NavPanel direction={direction} /> */}\r\n          </div>\r\n          {/* <NavSearch active={searchActive} close={onSearchClose} /> */}\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const {\r\n    navCollapsed,\r\n    navType,\r\n    headerNavColor,\r\n    mobileNav,\r\n    currentTheme,\r\n    direction,\r\n  } = theme;\r\n  return {\r\n    navCollapsed,\r\n    navType,\r\n    headerNavColor,\r\n    mobileNav,\r\n    currentTheme,\r\n    direction,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  toggleCollapsedNav,\r\n  onMobileNavToggle,\r\n})(HeaderNav);\r\n","const userNavTree = [];\r\nconst componentsNavTree = [];\r\nvar nav = [...componentsNavTree];\r\n\r\nif (sessionStorage.getItem('role') === 'USER') {\r\n  nav = userNavTree;\r\n}\r\n\r\nconst navigationConfig = [...nav];\r\n\r\nexport default navigationConfig;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from '../../configs/NavigationConfig';\r\nimport IntlMessage from '../../components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = {\r\n  '/app': <IntlMessage id='home' />,\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n  const assignBreadcrumb = (obj) =>\r\n    (breadcrumbData[obj.path] = <IntlMessage id={obj.title} />);\r\n  assignBreadcrumb(elm);\r\n  if (elm.submenu) {\r\n    elm.submenu.forEach((elm) => {\r\n      assignBreadcrumb(elm);\r\n      if (elm.submenu) {\r\n        elm.submenu.forEach((elm) => {\r\n          assignBreadcrumb(elm);\r\n        });\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\nconst BreadcrumbRoute = withRouter((props) => {\r\n  const { location } = props;\r\n  const pathSnippets = location.pathname.split('/').filter((i) => i);\r\n  const buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        {/* <Link to={url}>{breadcrumbData[url]}</Link> */}\r\n      </Breadcrumb.Item>\r\n    );\r\n  });\r\n\r\n  return <Breadcrumb>{buildBreadcrumb}</Breadcrumb>;\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n  render() {\r\n    return <BreadcrumbRoute />;\r\n  }\r\n}\r\n\r\nexport default AppBreadcrumb;\r\n","import React from 'react'\r\nimport AppBreadcrumb from '../../components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React, { lazy, Suspense } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Loading from '../../components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from '../../configs/AppConfig';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\nimport { useEffect } from 'react';\r\nimport { listProperty } from '../../apis/dashboard/Property';\r\nimport { listLead, listSource } from '../../apis/dashboard/Lead';\r\nimport { listUser } from '../../apis/dashboard/User';\r\nimport { listTaskUser, listTask } from '../../apis/dashboard/Task';\r\nimport { listMeeting } from '../../apis/dashboard/Meeting';\r\nimport PropTypes from 'prop-types';\r\nimport { listProjects } from '../../apis/dashboard/Project';\r\nimport { listCustomers } from '../../apis/dashboard/Customer';\r\nimport { listExpense, listExpenseCategory } from '../../apis/dashboard/expense';\r\nimport { listTransaction } from '../../apis/dashboard/transaction';\r\nimport { listSalary } from '../../apis/dashboard/Salary';\r\n\r\nexport const AppViews = ({\r\n  listProperty,\r\n  listLead,\r\n  listSource,\r\n  listUser,\r\n  listTaskUser,\r\n  listTask,\r\n  listMeeting,\r\n  listProjects,\r\n  listCustomers,\r\n  listExpenseCategory,\r\n  listExpense,\r\n  listTransaction,\r\n  isAuthenticated,\r\n  listSalary,\r\n}) => {\r\n  useEffect(() => {\r\n    return () => {\r\n      if (isAuthenticated) {\r\n        listProperty();\r\n        listTask();\r\n        listUser();\r\n        listTaskUser();\r\n        listLead();\r\n        listSalary();\r\n        listSource();\r\n        listMeeting();\r\n        listProjects();\r\n        listCustomers();\r\n        listExpenseCategory();\r\n        listExpense();\r\n        listTransaction();\r\n      }\r\n    };\r\n  }, [\r\n    listProperty,\r\n    listLead,\r\n    listSource,\r\n    listUser,\r\n    listTaskUser,\r\n    listTask,\r\n    listMeeting,\r\n    listProjects,\r\n    listCustomers,\r\n    listExpenseCategory,\r\n    listExpense,\r\n    listTransaction,\r\n    isAuthenticated,\r\n    listSalary,\r\n  ]);\r\n\r\n  return (\r\n    <Suspense fallback={<Loading cover='content' />}>\r\n      <Switch>\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/property-management`}\r\n          component={lazy(() => import(`./PropertyManagement`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/add-property`}\r\n          component={lazy(() => import(`./PropertyManagement/addProperty`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/edit-property`}\r\n          component={lazy(() => import(`./PropertyManagement/editProperty`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/view-property`}\r\n          component={lazy(() => import(`./PropertyManagement/viewProperty`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/user-management`}\r\n          component={lazy(() => import(`./UserManagement`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/salary-management`}\r\n          component={lazy(() => import(`./SalaryManagement`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/user-profile`}\r\n          component={lazy(() => import(`./ProfileManage`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/lead-management`}\r\n          component={lazy(() => import(`./LeadManagement`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/task-management`}\r\n          component={lazy(() => import(`./TaskManagement`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/my-task`}\r\n          component={lazy(() => import(`./TaskList`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/meeting-schedule`}\r\n          component={lazy(() => import(`./Meeting`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/expense-management`}\r\n          component={lazy(() => import(`./ExpenseManagement`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/project-management`}\r\n          component={lazy(() => import(`./ProjectManagement`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/view-project-details`}\r\n          component={lazy(() => import(`./ProjectManagement/detailsPage`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/customer-management`}\r\n          component={lazy(() => import(`./CustomerManagement`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/view-customer-details`}\r\n          component={lazy(() => import(`./CustomerManagement/detailsPage`))}\r\n        />\r\n        <Route\r\n          path={`${APP_PREFIX_PATH}/transaction`}\r\n          component={lazy(() => import(`./Transaction`))}\r\n        />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\nAppViews.propTypes = {\r\n  listProperty: PropTypes.func,\r\n  listLead: PropTypes.func,\r\n  listSource: PropTypes.func,\r\n  listUser: PropTypes.func,\r\n  listTaskUser: PropTypes.func,\r\n  listTask: PropTypes.func,\r\n  isAuthenticated: PropTypes.any,\r\n  listMeeting: PropTypes.func,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  listProperty,\r\n  listLead,\r\n  listSource,\r\n  listUser,\r\n  listTaskUser,\r\n  listTask,\r\n  listMeeting,\r\n  listProjects,\r\n  listCustomers,\r\n  listExpenseCategory,\r\n  listExpense,\r\n  listTransaction,\r\n  listSalary,\r\n})(AppViews);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from '../../components/layout-components/SideNav';\r\nimport TopNav from '../../components/layout-components/TopNav';\r\nimport Loading from '../../components/shared-components/Loading';\r\nimport MobileNav from '../../components/layout-components/MobileNav';\r\nimport HeaderNav from '../../components/layout-components/HeaderNav';\r\nimport PageHeader from '../../components/layout-components/PageHeader';\r\nimport AppViews from '../../views/app-views';\r\nimport { Layout, Grid } from 'antd';\r\n\r\nimport navigationConfig from '../../configs/NavigationConfig';\r\nimport {\r\n  SIDE_NAV_WIDTH,\r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP,\r\n  DIR_RTL,\r\n  DIR_LTR,\r\n} from '../../constants/ThemeConstant';\r\nimport utils from '../../utils';\r\nimport { useThemeSwitcher } from 'react-css-theme-switcher';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { APP_PREFIX_PATH } from '../../configs/AppConfig';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({\r\n  navCollapsed,\r\n  navType,\r\n  location,\r\n  direction,\r\n  isAuthenticated,\r\n}) => {\r\n  const currentRouteInfo = utils.getRouteInfo(\r\n    navigationConfig,\r\n    location.pathname\r\n  );\r\n\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg');\r\n  const isNavSide = navType === NAV_TYPE_SIDE;\r\n  const isNavTop = navType === NAV_TYPE_TOP;\r\n  const getLayoutGutter = () => {\r\n    if (isNavTop || isMobile) {\r\n      return 0;\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH;\r\n  };\r\n\r\n  const { status } = useThemeSwitcher();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      history.push('/auth');\r\n    }\r\n  }, [isAuthenticated, history]);\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover='page' />;\r\n  }\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if (direction === DIR_LTR) {\r\n      return { paddingLeft: getLayoutGutter() };\r\n    }\r\n    if (direction === DIR_RTL) {\r\n      return { paddingRight: getLayoutGutter() };\r\n    }\r\n    return { paddingLeft: getLayoutGutter() };\r\n  };\r\n  if (location.pathname === '/app/' || location.pathname === '/app') {\r\n    return <Redirect to={`${APP_PREFIX_PATH}/property-management`} />;\r\n  }\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile} />\r\n      {isNavTop && !isMobile ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n      <Layout className='app-container'>\r\n        {isNavSide && !isMobile ? (\r\n          <SideNav routeInfo={currentRouteInfo} />\r\n        ) : null}\r\n        <Layout className='app-layout' style={getLayoutDirectionGutter()}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            {currentRouteInfo?.title === 'sidenav.my-compliance-view' ||\r\n            currentRouteInfo?.title === 'sidenav.events' ||\r\n            currentRouteInfo?.title === 'sidenav.compliance-view-task' ||\r\n            currentRouteInfo?.title === 'sidenav.compliance-approval' ? (\r\n              ''\r\n            ) : (\r\n              <PageHeader\r\n                display={currentRouteInfo?.breadcrumb}\r\n                title={currentRouteInfo?.title}\r\n              />\r\n            )}\r\n\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { navCollapsed, navType, locale } = theme;\r\n  const { isAuthenticated } = auth;\r\n  return { navCollapsed, navType, locale, isAuthenticated };\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));\r\n","import React, { lazy, Suspense } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Loading from '../../components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from '../../configs/AppConfig';\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover='page' />}>\r\n      <Switch>\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/login`}\r\n          component={lazy(() => import(`./authentication/login`))}\r\n        />\r\n         {/* <Route\r\n          path={`${AUTH_PREFIX_PATH}/otp`}\r\n          component={lazy(() => import(`./authentication/otp`))}\r\n        /> */}\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/forgot-password`}\r\n          component={lazy(() => import(`./authentication/forgot-password`))}\r\n        />\r\n        {/*<Route\r\n          path={`${AUTH_PREFIX_PATH}/reset-password`}\r\n          component={lazy(() => import(`./authentication/reset-password`))}\r\n        /> */}\r\n        <Route\r\n          path={`${AUTH_PREFIX_PATH}/error-1`}\r\n          component={lazy(() => import(`./errors/error-page-1`))}\r\n        />\r\n        <Redirect\r\n          from={`${AUTH_PREFIX_PATH}`}\r\n          to={`${AUTH_PREFIX_PATH}/login`}\r\n        />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default AppViews;\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from '../../views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import {useEffect} from 'react';\r\n\r\nconst addBodyClass = className => document.body.classList.add(className);\r\nconst removeBodyClass = className => document.body.classList.remove(className);\r\n\r\nexport default function useBodyClass(className) {\r\n    useEffect(\r\n\t\t\t() => {\r\n\t\t\t\t// Set up\r\n\t\t\t\tclassName instanceof Array ? className.map(addBodyClass) : addBodyClass(className);\r\n\r\n\t\t\t\t// Clean up\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\t\tclassName instanceof Array ? className.map(removeBodyClass) : removeBodyClass(className);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t[className]\r\n    );\r\n}","import React from 'react';\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport AppLayout from '../layouts/app-layout';\r\nimport AuthLayout from '../layouts/auth-layout';\r\nimport AppLocale from '../lang';\r\nimport { IntlProvider } from 'react-intl';\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from '../configs/AppConfig';\r\nimport useBodyClass from '../hooks/useBodyClass';\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location, direction } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  useBodyClass(`dir-${direction}`);\r\n\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}\r\n    >\r\n      <ConfigProvider locale={currentAppLocale.antd} direction={direction}>\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <Redirect to={APP_PREFIX_PATH + '/property-management'} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout direction={direction} />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout direction={direction} location={location} />\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale, direction } = theme;\r\n  const { token } = auth;\r\n  return { locale, token, direction };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));\r\n","import React, { useEffect } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from 'react-css-theme-switcher';\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\nimport setAuthToken from './utils/setAuthToken';\r\nimport { LOGIN_SUCCESS } from './actions/types';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  if (sessionStorage.token) {\r\n    setAuthToken(sessionStorage.token);\r\n    store.dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: {\r\n        token: sessionStorage.getItem('token'),\r\n        firstName: sessionStorage.getItem('firstName'),\r\n        lastName: sessionStorage.getItem('lastName'),\r\n        email: sessionStorage.getItem('email'),\r\n        id: sessionStorage.getItem('id'),\r\n        user_type: sessionStorage.getItem('user_type'),\r\n        phone_number: sessionStorage.getItem('phone_number'),\r\n      },\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    // store.dispatch(loadUser());\r\n  }, []);\r\n  return (\r\n    <div className='App'>\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider\r\n          themeMap={themes}\r\n          defaultTheme={THEME_CONFIG.currentTheme}\r\n          insertionPoint='styles-insertion-point'\r\n        >\r\n          <Router>\r\n            <Switch>\r\n              <Route path='/' component={Views} />\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  RESET_LOGIN_FAILED,\r\n  SET_LOADING_FALSE,\r\n  LOGOUT,\r\n  SINGLE_SELF_USER,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  token: sessionStorage.getItem('token'),\r\n  isAuthenticated: false,\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  first_name: null,\r\n  last_name: null,\r\n  phone_number: null,\r\n  user_type: null,\r\n  email: null,\r\n  id: null,\r\n};\r\n\r\nfunction authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: true,\r\n        isError: false,\r\n        isErrorType: null,\r\n        errMessage: null,\r\n        first_name: null,\r\n        last_name: null,\r\n        user_type: null,\r\n        email: null,\r\n        id: null,\r\n      };\r\n    case RESET_LOGIN_FAILED:\r\n      return {\r\n        ...state,\r\n        isError: false,\r\n        isErrorType: '',\r\n        errMessage: '',\r\n      };\r\n    case SINGLE_SELF_USER:\r\n      sessionStorage.setItem('firstName', payload.first_name);\r\n      sessionStorage.setItem('lastName', payload.last_name);\r\n      sessionStorage.setItem('email', payload.emailid);\r\n      sessionStorage.setItem('user_type', payload.user_type);\r\n      sessionStorage.setItem('phone_number', payload.phone_number);\r\n      return {\r\n        ...state,\r\n        first_name: payload.first_name,\r\n        last_name: payload.last_name,\r\n        email: payload.emailid,\r\n        user_type: payload.user_type,\r\n        phone_number: payload.phone_number,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      sessionStorage.setItem('token', payload.token);\r\n      sessionStorage.setItem('firstName', payload.firstName);\r\n      sessionStorage.setItem('lastName', payload.lastName);\r\n      sessionStorage.setItem('email', payload.email);\r\n      sessionStorage.setItem('id', payload.id);\r\n      sessionStorage.setItem('user_type', payload.user_type);\r\n      sessionStorage.setItem('phone_number', payload.phone_number);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        token: payload.token,\r\n        first_name: payload.firstName,\r\n        last_name: payload.lastName,\r\n        email: payload.email,\r\n        id: payload.id,\r\n        user_type: payload.user_type,\r\n        phone_number: payload.phone_number,\r\n      };\r\n    case LOGIN_FAILED:\r\n      sessionStorage.clear();\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        isError: true,\r\n        isErrorType: payload.hasOwnProperty('type')\r\n          ? payload.type\r\n          : 'LOGIN_FAILED',\r\n        errMessage: payload.message,\r\n      };\r\n    case SET_LOADING_FALSE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME,\r\n  DIRECTION_CHANGE\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from '../../configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    case DIRECTION_CHANGE:\r\n      return {\r\n        ...state,\r\n        direction: action.direction\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {\r\n  LIST_PROPERTY_DATA,\r\n  LOADING_LIST_PROPERTY,\r\n  SET_ALERT_PROPERTY,\r\n  SET_SIGNLE_PROPERTY,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  singleData: {},\r\n};\r\n\r\nfunction propertyReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SIGNLE_PROPERTY:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case LOADING_LIST_PROPERTY:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_PROPERTY_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case SET_ALERT_PROPERTY:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default propertyReducer;\r\n","import {\r\n  LIST_USER_DATA,\r\n  LOADING_LIST_USER,\r\n  SET_ALERT_USER,\r\n  SET_SIGNLE_USER,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  singleData: {},\r\n};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SIGNLE_USER:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case LOADING_LIST_USER:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_USER_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case SET_ALERT_USER:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import {\r\n  LIST_INTERACTION_DATA,\r\n  LIST_LEAD_DATA,\r\n  LIST_SOURCE_DATA,\r\n  LOADING_LIST_INTERACTION,\r\n  LOADING_LIST_LEAD,\r\n  LOADING_LIST_SOURCE,\r\n  SET_ALERT_LEAD,\r\n  SET_SIGNLE_LEAD,\r\n  SET_SIGNLE_INTERACTION,\r\n  LOADING_LIST_ACTION,\r\n  LIST_ACTION_DATA,\r\n  SET_SIGNLE_ACTION,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  source: [],\r\n  sourceLoading: false,\r\n  interaction: [],\r\n  interactionLoading: false,\r\n  singleData: {},\r\n  singleInteraction: {},\r\n  action: [],\r\n  actionLoading: false,\r\n  singleAction: {},\r\n};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOADING_LIST_ACTION:\r\n      return {\r\n        ...state,\r\n        actionLoading: payload,\r\n      };\r\n    case LIST_ACTION_DATA:\r\n      return {\r\n        ...state,\r\n        action: payload,\r\n      };\r\n    case LOADING_LIST_INTERACTION:\r\n      return {\r\n        ...state,\r\n        interactionLoading: payload,\r\n      };\r\n    case LIST_INTERACTION_DATA:\r\n      return {\r\n        ...state,\r\n        interaction: payload,\r\n      };\r\n    case LOADING_LIST_SOURCE:\r\n      return {\r\n        ...state,\r\n        sourceLoading: payload,\r\n      };\r\n    case LIST_SOURCE_DATA:\r\n      return {\r\n        ...state,\r\n        source: payload,\r\n      };\r\n    case SET_SIGNLE_LEAD:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case SET_SIGNLE_ACTION:\r\n      return {\r\n        ...state,\r\n        singleAction: payload,\r\n      };\r\n    case SET_SIGNLE_INTERACTION:\r\n      return {\r\n        ...state,\r\n        singleInteraction: payload,\r\n      };\r\n    case LOADING_LIST_LEAD:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_LEAD_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case SET_ALERT_LEAD:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import {\r\n  LIST_TASK_DATA,\r\n  LIST_TASK_DATA_USERS,\r\n  LOADING_LIST_TASK,\r\n  LOADING_LIST_USER_TASK,\r\n  SET_ALERT_TASK,\r\n  SET_SIGNLE_TASK,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  loadingUser: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  dataUser: [],\r\n  singleData: {},\r\n};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SIGNLE_TASK:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case LOADING_LIST_TASK:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_TASK_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case LOADING_LIST_USER_TASK:\r\n      return {\r\n        ...state,\r\n        loadingUser: payload,\r\n      };\r\n    case LIST_TASK_DATA_USERS:\r\n      return {\r\n        ...state,\r\n        dataUser: payload,\r\n      };\r\n    case SET_ALERT_TASK:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import {\r\n  LIST_MEETING_DATA,\r\n  LOADING_LIST_MEETING,\r\n  SET_ALERT_MEETING,\r\n  SET_SIGNLE_MEETING,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  singleData: {},\r\n};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SIGNLE_MEETING:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case LOADING_LIST_MEETING:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_MEETING_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case SET_ALERT_MEETING:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import {\r\n  LIST_EXPENSE_DATA,\r\n  LOADING_LIST_EXPENSE,\r\n  SET_ALERT_EXPENSE,\r\n  SET_SIGNLE_EXPENSE,\r\n  LIST_EXPNSE_CATEGORY,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  category: [],\r\n  singleData: {},\r\n};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LIST_EXPNSE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        category: payload,\r\n      };\r\n    case SET_SIGNLE_EXPENSE:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case LOADING_LIST_EXPENSE:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_EXPENSE_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case SET_ALERT_EXPENSE:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import {\r\n  LIST_PROJECT_DATA,\r\n  LOADING_LIST_PROJECT,\r\n  SET_ALERT_PROJECT,\r\n  SET_SIGNLE_PROJECT,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  singleData: {},\r\n};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SIGNLE_PROJECT:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case LOADING_LIST_PROJECT:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_PROJECT_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case SET_ALERT_PROJECT:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import {\r\n  LIST_CUSTOMER_DATA,\r\n  LOADING_LIST_CUSTOMER,\r\n  SET_ALERT_CUSTOMER,\r\n  SET_SIGNLE_CUSTOMER,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  singleData: {},\r\n};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SIGNLE_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case LOADING_LIST_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_CUSTOMER_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case SET_ALERT_CUSTOMER:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import {\r\n  LIST_TRANSACTION_DATA,\r\n  LOADING_LIST_TRANSACTION,\r\n  SET_ALERT_TRANSACTION,\r\n  SET_SIGNLE_TRANSACTION,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  data: [],\r\n  singleData: {},\r\n};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_SIGNLE_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        singleData: payload,\r\n      };\r\n    case LOADING_LIST_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_TRANSACTION_DATA:\r\n      return {\r\n        ...state,\r\n        data: payload,\r\n      };\r\n    case SET_ALERT_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import {\r\n  SET_ALERT_SALARY,\r\n  LIST_SALARY_DATA,\r\n  LOADING_LIST_SALARY,\r\n} from '../../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  isError: false,\r\n  isErrorType: null,\r\n  errMessage: null,\r\n  salary: [],\r\n  advance: [],\r\n  addons: [],\r\n};\r\n\r\nfunction userReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOADING_LIST_SALARY:\r\n      return {\r\n        ...state,\r\n        loading: payload,\r\n      };\r\n    case LIST_SALARY_DATA:\r\n      return {\r\n        ...state,\r\n        salary: payload.salary,\r\n        advance: payload.advance,\r\n        addons: payload.addons,\r\n      };\r\n    case SET_ALERT_SALARY:\r\n      return {\r\n        ...state,\r\n        isError: payload.isError,\r\n        isErrorType: payload.isErrorType,\r\n        errMessage: payload.errMessage,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\nimport auth from './Auth';\r\nimport theme from './Theme';\r\nimport property from './Property';\r\nimport user from './User';\r\nimport lead from './Lead';\r\nimport task from './Task';\r\nimport meeting from './Meeting';\r\nimport expense from './Expense';\r\nimport project from './Project';\r\nimport customer from './Customer';\r\nimport transaction from './Transaction';\r\nimport salary from './Salary';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n  theme,\r\n  property,\r\n  user,\r\n  lead,\r\n  task,\r\n  meeting,\r\n  expense,\r\n  project,\r\n  customer,\r\n  transaction,\r\n  salary,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"sourceRoot":""}