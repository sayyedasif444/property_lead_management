{"version":3,"sources":["apis/dashboard/Property.js","views/app-views/PropertyManagement/addProperty.js"],"names":["propertyAlert","addProperty","data","formdata","videoData","dispatch","a","config","body","axios","method","url","BACKEND_URL","headers","then","response","statuscode","length","addMedia","type","SET_ALERT_PROPERTY","payload","isError","isErrorType","errMessage","message","clearTimeout","setTimeout","catch","error","listProperty","LOADING_LIST_PROPERTY","LIST_PROPERTY_DATA","deleteProperty","editProperty","listPropertybyId","id","isMedia","property_id","FormData","append","forEach","ele","deletePropertyFile","property","SET_SIGNLE_PROPERTY","downloadData","link","document","createElement","download","name","href","BACKEND_URL_PDF","target","appendChild","click","removeChild","Option","Select","TabPane","Tabs","Dragger","Upload","connect","state","Form","useForm","form","useState","fileData","setfileData","fileData2","setfileData2","reload","setreload","reload2","setreload2","props","multiple","onRemove","file","fileList","newFileList","filter","uid","onChange","flag","split","beforeUpload","props2","history","useHistory","useEffect","resetFields","push","success","lg","className","style","fontSize","to","layout","preserve","onFinish","values","defaultActiveKey","tab","gutter","Item","label","rules","required","showSearch","width","placeholder","optionFilterProp","e","onFocus","onBlur","onSearch","filterOption","input","option","children","toLowerCase","indexOf","value","htmlType"],"mappings":"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","file":"static/js/24.322075cd.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  BACKEND_URL_PDF,\r\n  LIST_PROPERTY_DATA,\r\n  LOADING_LIST_PROPERTY,\r\n  SET_ALERT_PROPERTY,\r\n  SET_SIGNLE_PROPERTY,\r\n} from '../../actions/types';\r\n\r\nlet propertyAlert;\r\nexport const addProperty = (data, formdata, videoData) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/add-property',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        if (formdata.length > 0) {\r\n          dispatch(addMedia(formdata, 'image', response.data.data));\r\n        }\r\n        if (videoData.length > 0) {\r\n          dispatch(addMedia(videoData, 'video', response.data.data));\r\n        }\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROPERTY,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(propertyAlert);\r\n      propertyAlert = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const listProperty = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_PROPERTY, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/list-property',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_PROPERTY, payload: false });\r\n        dispatch({ type: LIST_PROPERTY_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_PROPERTY, payload: false });\r\n        dispatch({ type: LIST_PROPERTY_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_PROPERTY, payload: false });\r\n      dispatch({ type: LIST_PROPERTY_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nexport const deleteProperty = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/delete-property',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listProperty());\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROPERTY,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(propertyAlert);\r\n      propertyAlert = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editProperty = (data, formdata, videoData) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/edit-property',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listPropertybyId(data.id));\r\n        if (formdata.length > 0) {\r\n          dispatch(addMedia(formdata, 'image', response.data.data));\r\n        }\r\n        if (videoData.length > 0) {\r\n          dispatch(addMedia(videoData, 'video', response.data.data));\r\n        }\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROPERTY,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(propertyAlert);\r\n      propertyAlert = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const addMedia =\r\n  (formdata, isMedia, property_id) => async (dispatch) => {\r\n    var body = new FormData();\r\n    body.append('mediaType', isMedia);\r\n    body.append('property_id', property_id);\r\n    formdata.forEach((ele) => {\r\n      body.append('files', ele);\r\n    });\r\n    const config = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    await axios({\r\n      method: 'POST',\r\n      url: BACKEND_URL + 'property/add-property-files',\r\n      data: body,\r\n      headers: config,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.statuscode === 200) {\r\n          dispatch(listPropertybyId(property_id));\r\n        } else {\r\n        }\r\n      })\r\n      .catch((error) => {});\r\n  };\r\n\r\nexport const deletePropertyFile = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/delete-file',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listPropertybyId(data.property));\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(propertyAlert);\r\n        propertyAlert = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_PROPERTY,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_PROPERTY,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(propertyAlert);\r\n      propertyAlert = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_PROPERTY,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const listPropertybyId = (id) => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_PROPERTY, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { id };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/property-by-id',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: SET_SIGNLE_PROPERTY,\r\n          payload: response.data.data,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: SET_SIGNLE_PROPERTY,\r\n          payload: {},\r\n        });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_SIGNLE_PROPERTY,\r\n        payload: {},\r\n      });\r\n    });\r\n};\r\n\r\nexport const downloadData = (id) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { id: id };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'property/download-file',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        var link = document.createElement('a');\r\n        link.download = response.data.name;\r\n        link.href = BACKEND_URL_PDF + response.data.data;\r\n        link.target = '_blank'\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      } else {\r\n      }\r\n    })\r\n    .catch((error) => {});\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  message,\r\n  Row,\r\n  Select,\r\n  Tabs,\r\n  Upload,\r\n} from 'antd';\r\nimport { ArrowLeftOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { addProperty } from '../../../apis/dashboard/Property';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nconst { Option } = Select;\r\nconst { TabPane } = Tabs;\r\nconst { Dragger } = Upload;\r\n\r\nconst AddProperty = ({ addProperty, errMessage, isError, isErrorType }) => {\r\n  const [form] = Form.useForm();\r\n  const onSubmit = (values) => {\r\n    addProperty(values, fileData, fileData2);\r\n    setreload(true);\r\n    setreload2(true);\r\n    setTimeout(() => {\r\n      setreload(false);\r\n      setreload2(false);\r\n    }, 100);\r\n  };\r\n  const [fileData, setfileData] = useState([]);\r\n  const [fileData2, setfileData2] = useState([]);\r\n  const [reload, setreload] = useState(false);\r\n  const [reload2, setreload2] = useState(false);\r\n\r\n  const props = {\r\n    multiple: true,\r\n    onRemove: (file, fileList) => {\r\n      const newFileList = fileData.filter((ele) => ele.uid !== file.uid);\r\n      setfileData(newFileList);\r\n    },\r\n    onChange: (file, fileList) => {\r\n      var flag = false;\r\n      fileList.forEach((ele) => {\r\n        if (file.type.split('/')[0] !== 'image') {\r\n          flag = true;\r\n          message.error('Invalid Image!');\r\n          setreload(true);\r\n          setTimeout(() => {\r\n            setreload(false);\r\n          }, 100);\r\n          return false;\r\n        }\r\n      });\r\n      if (!flag) setfileData([...fileList]);\r\n      return false;\r\n    },\r\n    beforeUpload: (file, fileList) => {\r\n      var flag = false;\r\n      fileList.forEach((ele) => {\r\n        if (file.type.split('/')[0] !== 'image') {\r\n          flag = true;\r\n          message.error('Invalid Image!');\r\n          setreload(true);\r\n          setTimeout(() => {\r\n            setreload(false);\r\n          }, 100);\r\n          return false;\r\n        }\r\n      });\r\n      if (!flag) setfileData([...fileList]);\r\n      return false;\r\n    },\r\n    fileData,\r\n  };\r\n\r\n  const props2 = {\r\n    multiple: true,\r\n    onRemove: (file, fileList) => {\r\n      const newFileList = fileData.filter((ele) => ele.uid !== file.uid);\r\n      setfileData2(newFileList);\r\n    },\r\n    beforeUpload: (file, fileList) => {\r\n      var flag = false;\r\n      fileList.forEach((ele) => {\r\n        if (file.type.split('/')[0] !== 'video') {\r\n          flag = true;\r\n          message.error('Invalid video!');\r\n          setreload2(true);\r\n          setTimeout(() => {\r\n            setreload2(false);\r\n          }, 100);\r\n          return false;\r\n        }\r\n      });\r\n      if (!flag) setfileData2([...fileList]);\r\n      return false;\r\n    },\r\n    fileData2,\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (isError && isErrorType === 'SUCCESS') {\r\n      setTimeout(() => {\r\n        form.resetFields();\r\n        history.push('/app/property-management');\r\n      }, 1000);\r\n      message.success(errMessage);\r\n    } else if (isError && isErrorType === 'FAIL') {\r\n      message.error(errMessage);\r\n    }\r\n  }, [isError, isErrorType, errMessage, form, history]);\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row>\r\n          <Col lg={24}>\r\n            <h4>\r\n              Please fill the below details{' '}\r\n              <span className='float-right'>\r\n                <Link\r\n                  className='btn btn-primary'\r\n                  style={{ fontSize: '80%' }}\r\n                  to='/app/property-management'\r\n                >\r\n                  <ArrowLeftOutlined /> Go Back\r\n                </Link>\r\n              </span>\r\n            </h4>\r\n            <hr className='mb-3' />\r\n          </Col>\r\n          <Col lg={24}>\r\n            <Form\r\n              form={form}\r\n              layout='vertical'\r\n              name='new-compliance'\r\n              preserve={false}\r\n              onFinish={onSubmit}\r\n              style={{ fontSize: '14px' }}\r\n            >\r\n              <Tabs defaultActiveKey='1'>\r\n                <TabPane tab='Details' key='1' className='pl-2 pb-2 pr-2'>\r\n                  <Row gutter={16}>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_type'\r\n                        label={<span>Property Type</span>}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please provide value',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select Type'\r\n                          optionFilterProp='children'\r\n                          onChange={(e) => {}}\r\n                          onFocus={() => {}}\r\n                          onBlur={() => {}}\r\n                          onSearch={() => {}}\r\n                          filterOption={(input, option) =>\r\n                            option.props.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          <Option value='Residential'>Residential</Option>\r\n                          <Option value='Investment'>Investment</Option>\r\n                          <Option value='Commercial'>Commercial</Option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_location'\r\n                        label={<span>Plot location </span>}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please provide value',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder='Plot location' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_locality'\r\n                        label={<span>Plot Locality </span>}\r\n                      >\r\n                        <Input placeholder='Plot Locality' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_area'\r\n                        label={<span>Area </span>}\r\n                      >\r\n                        <Input placeholder='Area' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_front'\r\n                        label={<span>Front </span>}\r\n                      >\r\n                        <Input placeholder='Front' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_deep'\r\n                        label={<span>Deep </span>}\r\n                      >\r\n                        <Input placeholder='Deep' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='plot_face'\r\n                        label={<span>Plot Face </span>}\r\n                      >\r\n                        <Input placeholder='Plot Face' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='corner_plot'\r\n                        label={<span>Corner Plot </span>}\r\n                      >\r\n                        <Input placeholder='Corner Plot' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='no_of_open_sides'\r\n                        label={<span>No. of open sides</span>}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select Type'\r\n                          optionFilterProp='children'\r\n                          onChange={(e) => {}}\r\n                          onFocus={() => {}}\r\n                          onBlur={() => {}}\r\n                          onSearch={() => {}}\r\n                          filterOption={(input, option) =>\r\n                            option.props.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          <Option value='1'>1</Option>\r\n                          <Option value='2'>2</Option>\r\n                          <Option value='3'>3</Option>\r\n                          <Option value='4'>4</Option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='plot_boundaries'\r\n                        label={<span>Plot Boundary</span>}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select Type'\r\n                          optionFilterProp='children'\r\n                          onChange={(e) => {}}\r\n                          onFocus={() => {}}\r\n                          onBlur={() => {}}\r\n                          onSearch={() => {}}\r\n                          filterOption={(input, option) =>\r\n                            option.props.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          <Option value='Yes'>Yes</Option>\r\n                          <Option value='No'>No</Option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='facing_road_width'\r\n                        label={<span>Facing Road Width </span>}\r\n                      >\r\n                        <Input placeholder='Facing Road Width' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='plot_land_mark'\r\n                        label={<span>Plot Land Mark </span>}\r\n                      >\r\n                        <Input placeholder='Plot Land Mark' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='near_by'\r\n                        label={<span>Near by </span>}\r\n                      >\r\n                        <Input placeholder='Near by' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='expected_price'\r\n                        label={<span>Expected Price </span>}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please provide value',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <InputNumber\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Expected Price'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='syndicate'\r\n                        label={<span>Syndicate Price </span>}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please provide value',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <InputNumber\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Syndicate Price'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='price_per_sqft'\r\n                        label={<span>Price Per sqft </span>}\r\n                      >\r\n                        <InputNumber\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Price Per sqft'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='source_name'\r\n                        label={<span>Source Name </span>}\r\n                      >\r\n                        <Input\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Source Name'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={16}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='google_map_link'\r\n                        label={<span>Google Map Link </span>}\r\n                      >\r\n                        <Input placeholder='Google Map Link' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tab='File Uploads' key='2' className='pl-2 pb-2 pr-2'>\r\n                  <Row>\r\n                    {!reload && (\r\n                      <Col lg={12} className='pr-1 mb-3 mt-0'>\r\n                        <h4>Image Upload</h4>\r\n                        <Col lg={24}>\r\n                          <Dragger {...props}>\r\n                            <p className='ant-upload-drag-icon'>\r\n                              <InboxOutlined />\r\n                            </p>\r\n                            <p className='ant-upload-text'>\r\n                              Click or drag images to upload\r\n                            </p>\r\n                          </Dragger>\r\n                        </Col>\r\n                      </Col>\r\n                    )}\r\n                    {!reload2 && (\r\n                      <Col lg={12} className='pl-1 mb-3 mt-0'>\r\n                        <h4>Video Upload</h4>\r\n                        <Col lg={24}>\r\n                          <Dragger {...props2}>\r\n                            <p className='ant-upload-drag-icon'>\r\n                              <InboxOutlined />\r\n                            </p>\r\n                            <p className='ant-upload-text'>\r\n                              Click or drag images to upload\r\n                            </p>\r\n                          </Dragger>\r\n                        </Col>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </TabPane>\r\n              </Tabs>\r\n              <hr />\r\n              <Form.Item className='text-left mb-2'>\r\n                <Button type='primary' htmlType='submit'>\r\n                  Save\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddProperty.propTypes = {\r\n  addProperty: PropTypes.any,\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  isErrorType: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isError: state.property.isError,\r\n  errMessage: state.property.errMessage,\r\n  isErrorType: state.property.isErrorType,\r\n});\r\nexport default connect(mapStateToProps, { addProperty })(AddProperty);\r\n"],"sourceRoot":""}