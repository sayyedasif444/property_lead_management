{"version":3,"sources":["views/app-views/PropertyManagement/addProperty.js"],"names":["Option","Select","TabPane","Tabs","Dragger","Upload","connect","state","isError","property","errMessage","isErrorType","addProperty","Form","useForm","form","useState","fileData","setfileData","fileData2","setfileData2","reload","setreload","reload2","setreload2","props","multiple","onRemove","file","fileList","newFileList","filter","ele","uid","onChange","flag","forEach","type","split","message","error","setTimeout","beforeUpload","props2","history","useHistory","useEffect","resetFields","push","success","lg","className","style","fontSize","to","layout","name","preserve","onFinish","values","defaultActiveKey","tab","gutter","Item","label","rules","required","showSearch","width","placeholder","optionFilterProp","e","onFocus","onBlur","onSearch","filterOption","input","option","children","toLowerCase","indexOf","value","htmlType"],"mappings":"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","file":"static/js/28.6b3aedee.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  message,\r\n  Row,\r\n  Select,\r\n  Tabs,\r\n  Upload,\r\n} from 'antd';\r\nimport { ArrowLeftOutlined, InboxOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { addProperty } from '../../../apis/dashboard/Property';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nconst { Option } = Select;\r\nconst { TabPane } = Tabs;\r\nconst { Dragger } = Upload;\r\n\r\nconst AddProperty = ({ addProperty, errMessage, isError, isErrorType }) => {\r\n  const [form] = Form.useForm();\r\n  const onSubmit = (values) => {\r\n    addProperty(values, fileData, fileData2);\r\n    setreload(true);\r\n    setreload2(true);\r\n    setTimeout(() => {\r\n      setreload(false);\r\n      setreload2(false);\r\n    }, 100);\r\n  };\r\n  const [fileData, setfileData] = useState([]);\r\n  const [fileData2, setfileData2] = useState([]);\r\n  const [reload, setreload] = useState(false);\r\n  const [reload2, setreload2] = useState(false);\r\n\r\n  const props = {\r\n    multiple: true,\r\n    onRemove: (file, fileList) => {\r\n      const newFileList = fileData.filter((ele) => ele.uid !== file.uid);\r\n      setfileData(newFileList);\r\n    },\r\n    onChange: (file, fileList) => {\r\n      var flag = false;\r\n      fileList.forEach((ele) => {\r\n        if (file.type.split('/')[0] !== 'image') {\r\n          flag = true;\r\n          message.error('Invalid Image!');\r\n          setreload(true);\r\n          setTimeout(() => {\r\n            setreload(false);\r\n          }, 100);\r\n          return false;\r\n        }\r\n      });\r\n      if (!flag) setfileData([...fileList]);\r\n      return false;\r\n    },\r\n    beforeUpload: (file, fileList) => {\r\n      var flag = false;\r\n      fileList.forEach((ele) => {\r\n        if (file.type.split('/')[0] !== 'image') {\r\n          flag = true;\r\n          message.error('Invalid Image!');\r\n          setreload(true);\r\n          setTimeout(() => {\r\n            setreload(false);\r\n          }, 100);\r\n          return false;\r\n        }\r\n      });\r\n      if (!flag) setfileData([...fileList]);\r\n      return false;\r\n    },\r\n    fileData,\r\n  };\r\n\r\n  const props2 = {\r\n    multiple: true,\r\n    onRemove: (file, fileList) => {\r\n      const newFileList = fileData.filter((ele) => ele.uid !== file.uid);\r\n      setfileData2(newFileList);\r\n    },\r\n    beforeUpload: (file, fileList) => {\r\n      var flag = false;\r\n      fileList.forEach((ele) => {\r\n        if (file.type.split('/')[0] !== 'video') {\r\n          flag = true;\r\n          message.error('Invalid video!');\r\n          setreload2(true);\r\n          setTimeout(() => {\r\n            setreload2(false);\r\n          }, 100);\r\n          return false;\r\n        }\r\n      });\r\n      if (!flag) setfileData2([...fileList]);\r\n      return false;\r\n    },\r\n    fileData2,\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (isError && isErrorType === 'SUCCESS') {\r\n      setTimeout(() => {\r\n        form.resetFields();\r\n        history.push('/app/property-management');\r\n      }, 1000);\r\n      message.success(errMessage);\r\n    } else if (isError && isErrorType === 'FAIL') {\r\n      message.error(errMessage);\r\n    }\r\n  }, [isError, isErrorType, errMessage, form, history]);\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row>\r\n          <Col lg={24}>\r\n            <h4>\r\n              Please fill the below details{' '}\r\n              <span className='float-right'>\r\n                <Link\r\n                  className='btn btn-primary'\r\n                  style={{ fontSize: '80%' }}\r\n                  to='/app/property-management'\r\n                >\r\n                  <ArrowLeftOutlined /> Go Back\r\n                </Link>\r\n              </span>\r\n            </h4>\r\n            <hr className='mb-3' />\r\n          </Col>\r\n          <Col lg={24}>\r\n            <Form\r\n              form={form}\r\n              layout='vertical'\r\n              name='new-compliance'\r\n              preserve={false}\r\n              onFinish={onSubmit}\r\n              style={{ fontSize: '14px' }}\r\n            >\r\n              <Tabs defaultActiveKey='1'>\r\n                <TabPane tab='Details' key='1' className='pl-2 pb-2 pr-2'>\r\n                  <Row gutter={16}>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_type'\r\n                        label={<span>Property Type</span>}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please provide value',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select Type'\r\n                          optionFilterProp='children'\r\n                          onChange={(e) => {}}\r\n                          onFocus={() => {}}\r\n                          onBlur={() => {}}\r\n                          onSearch={() => {}}\r\n                          filterOption={(input, option) =>\r\n                            option.props.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          <Option value='Residential'>Residential</Option>\r\n                          <Option value='Investment'>Investment</Option>\r\n                          <Option value='Commercial'>Commercial</Option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_location'\r\n                        label={<span>Plot location </span>}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please provide value',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder='Plot location' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_locality'\r\n                        label={<span>Plot Locality </span>}\r\n                      >\r\n                        <Input placeholder='Plot Locality' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_area'\r\n                        label={<span>Area </span>}\r\n                      >\r\n                        <Input placeholder='Area' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_front'\r\n                        label={<span>Front </span>}\r\n                      >\r\n                        <Input placeholder='Front' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='property_deep'\r\n                        label={<span>Deep </span>}\r\n                      >\r\n                        <Input placeholder='Deep' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='plot_face'\r\n                        label={<span>Plot Face </span>}\r\n                      >\r\n                        <Input placeholder='Plot Face' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='corner_plot'\r\n                        label={<span>Corner Plot </span>}\r\n                      >\r\n                        <Input placeholder='Corner Plot' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='no_of_open_sides'\r\n                        label={<span>No. of open sides</span>}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select Type'\r\n                          optionFilterProp='children'\r\n                          onChange={(e) => {}}\r\n                          onFocus={() => {}}\r\n                          onBlur={() => {}}\r\n                          onSearch={() => {}}\r\n                          filterOption={(input, option) =>\r\n                            option.props.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          <Option value='1'>1</Option>\r\n                          <Option value='2'>2</Option>\r\n                          <Option value='3'>3</Option>\r\n                          <Option value='4'>4</Option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='plot_boundaries'\r\n                        label={<span>Plot Boundary</span>}\r\n                      >\r\n                        <Select\r\n                          showSearch\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Select Type'\r\n                          optionFilterProp='children'\r\n                          onChange={(e) => {}}\r\n                          onFocus={() => {}}\r\n                          onBlur={() => {}}\r\n                          onSearch={() => {}}\r\n                          filterOption={(input, option) =>\r\n                            option.props.children\r\n                              .toLowerCase()\r\n                              .indexOf(input.toLowerCase()) >= 0\r\n                          }\r\n                        >\r\n                          <Option value='Yes'>Yes</Option>\r\n                          <Option value='No'>No</Option>\r\n                        </Select>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='facing_road_width'\r\n                        label={<span>Facing Road Width </span>}\r\n                      >\r\n                        <Input placeholder='Facing Road Width' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='plot_land_mark'\r\n                        label={<span>Plot Land Mark </span>}\r\n                      >\r\n                        <Input placeholder='Plot Land Mark' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='near_by'\r\n                        label={<span>Near by </span>}\r\n                      >\r\n                        <Input placeholder='Near by' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='expected_price'\r\n                        label={<span>Expected Price </span>}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please provide value',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <InputNumber\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Expected Price'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='syndicate'\r\n                        label={<span>Syndicate Price </span>}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please provide value',\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <InputNumber\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Syndicate Price'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='price_per_sqft'\r\n                        label={<span>Price Per sqft </span>}\r\n                      >\r\n                        <InputNumber\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Price Per sqft'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='source_name'\r\n                        label={<span>Source Name </span>}\r\n                      >\r\n                        <Input\r\n                          style={{ width: '100%' }}\r\n                          placeholder='Source Name'\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col lg={16}>\r\n                      <Form.Item\r\n                        className='mb-3'\r\n                        name='google_map_link'\r\n                        label={<span>Google Map Link </span>}\r\n                      >\r\n                        <Input placeholder='Google Map Link' />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </TabPane>\r\n                <TabPane tab='File Uploads' key='2' className='pl-2 pb-2 pr-2'>\r\n                  <Row>\r\n                    {!reload && (\r\n                      <Col lg={12} className='pr-1 mb-3 mt-0'>\r\n                        <h4>Image Upload</h4>\r\n                        <Col lg={24}>\r\n                          <Dragger {...props}>\r\n                            <p className='ant-upload-drag-icon'>\r\n                              <InboxOutlined />\r\n                            </p>\r\n                            <p className='ant-upload-text'>\r\n                              Click or drag images to upload\r\n                            </p>\r\n                          </Dragger>\r\n                        </Col>\r\n                      </Col>\r\n                    )}\r\n                    {!reload2 && (\r\n                      <Col lg={12} className='pl-1 mb-3 mt-0'>\r\n                        <h4>Video Upload</h4>\r\n                        <Col lg={24}>\r\n                          <Dragger {...props2}>\r\n                            <p className='ant-upload-drag-icon'>\r\n                              <InboxOutlined />\r\n                            </p>\r\n                            <p className='ant-upload-text'>\r\n                              Click or drag images to upload\r\n                            </p>\r\n                          </Dragger>\r\n                        </Col>\r\n                      </Col>\r\n                    )}\r\n                  </Row>\r\n                </TabPane>\r\n              </Tabs>\r\n              <hr />\r\n              <Form.Item className='text-left mb-2'>\r\n                <Button type='primary' htmlType='submit'>\r\n                  Save\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddProperty.propTypes = {\r\n  addProperty: PropTypes.any,\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  isErrorType: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isError: state.property.isError,\r\n  errMessage: state.property.errMessage,\r\n  isErrorType: state.property.isErrorType,\r\n});\r\nexport default connect(mapStateToProps, { addProperty })(AddProperty);\r\n"],"sourceRoot":""}