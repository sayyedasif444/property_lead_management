{"version":3,"sources":["apis/dashboard/User.js","views/app-views/ProfileManage/editUser.js","views/app-views/ProfileManage/editPassword.js","views/app-views/ProfileManage/index.js"],"names":["userAlet","listUser","dispatch","a","type","LOADING_LIST_USER","payload","config","body","axios","method","url","BACKEND_URL","data","headers","then","response","statuscode","LIST_USER_DATA","catch","error","addUser","SET_ALERT_USER","isError","isErrorType","errMessage","message","clearTimeout","setTimeout","editUser","flag","listSingleUser","id","passwordUpdate","passwordUpdateAdmin","deleteUser","SINGLE_SELF_USER","Option","Select","connect","state","user","first_name","auth","last_name","emailid","email","user_type","phone_number","visible","cancel","Form","useForm","form","useEffect","setFieldsValue","layout","name","preserve","onFinish","values","gutter","span","Item","label","rules","required","placeholder","style","display","size","width","value","className","htmlType","singleData","getFieldValue","validator","rule","Promise","reject","resolve","loading","isAuthenticated","success","lg"],"mappings":"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","file":"static/js/18.f8972918.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport {\r\n  BACKEND_URL,\r\n  LIST_USER_DATA,\r\n  LOADING_LIST_USER,\r\n  SET_ALERT_USER,\r\n  SINGLE_SELF_USER,\r\n} from '../../actions/types';\r\n\r\nexport const listUser = () => async (dispatch) => {\r\n  dispatch({ type: LOADING_LIST_USER, payload: true });\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = {};\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/list-user',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: LOADING_LIST_USER, payload: false });\r\n        dispatch({ type: LIST_USER_DATA, payload: response.data.data });\r\n      } else {\r\n        dispatch({ type: LOADING_LIST_USER, payload: false });\r\n        dispatch({ type: LIST_USER_DATA, payload: [] });\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: LOADING_LIST_USER, payload: false });\r\n      dispatch({ type: LIST_USER_DATA, payload: [] });\r\n    });\r\n};\r\n\r\nlet userAlet;\r\nexport const addUser = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/add-user',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listUser());\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const editUser =\r\n  (data, flag = false) =>\r\n  async (dispatch) => {\r\n    const config = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    const body = data;\r\n    await axios({\r\n      method: 'POST',\r\n      url: BACKEND_URL + 'user/edit-user',\r\n      data: body,\r\n      headers: config,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.statuscode === 200) {\r\n          if (flag) {\r\n            dispatch(listSingleUser(data.id));\r\n          } else {\r\n            dispatch(listUser());\r\n          }\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: true,\r\n              isErrorType: 'SUCCESS',\r\n              errMessage: response.data.message,\r\n            },\r\n          });\r\n          clearTimeout(userAlet);\r\n          userAlet = setTimeout(() => {\r\n            dispatch({\r\n              type: SET_ALERT_USER,\r\n              payload: {\r\n                isError: false,\r\n                isErrorType: null,\r\n                errMessage: null,\r\n              },\r\n            });\r\n          }, 1000);\r\n        } else {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: true,\r\n              isErrorType: 'FAIL',\r\n              errMessage: response.data.message,\r\n            },\r\n          });\r\n          clearTimeout(userAlet);\r\n          userAlet = setTimeout(() => {\r\n            dispatch({\r\n              type: SET_ALERT_USER,\r\n              payload: {\r\n                isError: false,\r\n                isErrorType: null,\r\n                errMessage: null,\r\n              },\r\n            });\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: 'Something went wrong! Please try again later',\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      });\r\n  };\r\n\r\nexport const passwordUpdate = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/update-password',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const passwordUpdateAdmin = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/update-password-admin',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const deleteUser = (data) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = data;\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/delete-user',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch(listUser());\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'SUCCESS',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      } else {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: true,\r\n            isErrorType: 'FAIL',\r\n            errMessage: response.data.message,\r\n          },\r\n        });\r\n        clearTimeout(userAlet);\r\n        userAlet = setTimeout(() => {\r\n          dispatch({\r\n            type: SET_ALERT_USER,\r\n            payload: {\r\n              isError: false,\r\n              isErrorType: null,\r\n              errMessage: null,\r\n            },\r\n          });\r\n        }, 1000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: SET_ALERT_USER,\r\n        payload: {\r\n          isError: true,\r\n          isErrorType: 'FAIL',\r\n          errMessage: 'Something went wrong! Please try again later',\r\n        },\r\n      });\r\n      clearTimeout(userAlet);\r\n      userAlet = setTimeout(() => {\r\n        dispatch({\r\n          type: SET_ALERT_USER,\r\n          payload: {\r\n            isError: false,\r\n            isErrorType: null,\r\n            errMessage: null,\r\n          },\r\n        });\r\n      }, 1000);\r\n    });\r\n};\r\n\r\nexport const listSingleUser = (id) => async (dispatch) => {\r\n  const config = {\r\n    'Content-Type': 'application/json',\r\n  };\r\n  const body = { id: id };\r\n  await axios({\r\n    method: 'POST',\r\n    url: BACKEND_URL + 'user/list-user-by-id',\r\n    data: body,\r\n    headers: config,\r\n  })\r\n    .then((response) => {\r\n      if (response.data.statuscode === 200) {\r\n        dispatch({ type: SINGLE_SELF_USER, payload: response.data.data });\r\n      }\r\n    })\r\n    .catch((error) => {});\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Row, Col, Form, Input, Button, Select } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { editUser } from '../../../apis/dashboard/User';\r\nconst { Option } = Select;\r\n\r\nconst AddUser = ({\r\n  visible,\r\n  cancel,\r\n  errMessage,\r\n  isError,\r\n  isErrorType,\r\n  editUser,\r\n  first_name,\r\n  last_name,\r\n  emailid,\r\n  user_type,\r\n  phone_number,\r\n  id,\r\n}) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onSubmit = (values) => {\r\n    values.id = id;\r\n    editUser(values, true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue({\r\n      first_name: first_name !== null ? first_name : '',\r\n      last_name: last_name !== null ? last_name : '',\r\n      emailid: emailid !== null ? emailid : '',\r\n      phone_number: phone_number !== null ? phone_number : '',\r\n      user_type: user_type !== null ? user_type : '',\r\n    });\r\n  }, [emailid, first_name, form, last_name, phone_number, user_type]);\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout='vertical'\r\n      name='new-company'\r\n      preserve={false}\r\n      onFinish={onSubmit}\r\n    >\r\n      <Row gutter={16}>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            name='first_name'\r\n            label={<span>First Name</span>}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Please input First Name`,\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder='First Name' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            name='last_name'\r\n            label={<span>Last Name</span>}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Please input Last Name`,\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder='Last Name' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            name='emailid'\r\n            label={<span>Email Id</span>}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Please input Email Id`,\r\n              },\r\n            ]}\r\n          >\r\n            <Input type='email' placeholder='Email Id' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8} style={{ display: 'none' }}>\r\n          <Form.Item\r\n            name='user_type'\r\n            label={<span>User Role</span>}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Please input user type`,\r\n              },\r\n            ]}\r\n          >\r\n            <Select size={'default'} style={{ width: '100%' }}>\r\n              <Option value={'USER'}>USER</Option>\r\n              <Option value={'ADMIN'}>ADMIN</Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Form.Item name='phone_number' label={<span>Phone Number</span>}>\r\n            <Input placeholder='Phone Number' />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Form.Item className='text-right mb-0'>\r\n        <Button type='primary' htmlType='submit'>\r\n          Save\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nAddUser.propTypes = {\r\n  editUser: PropTypes.any,\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  singleData: PropTypes.any,\r\n  isErrorType: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isError: state.user.isError,\r\n  errMessage: state.user.errMessage,\r\n  isErrorType: state.user.isErrorType,\r\n  first_name: state.auth.first_name,\r\n  last_name: state.auth.last_name,\r\n  emailid: state.auth.email,\r\n  user_type: state.auth.user_type,\r\n  phone_number: state.auth.phone_number,\r\n  id: state.auth.id,\r\n});\r\nexport default connect(mapStateToProps, { editUser })(AddUser);\r\n","import React from 'react';\r\nimport { Row, Col, Form, Input, Button } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { passwordUpdate } from '../../../apis/dashboard/User';\r\n\r\nconst AddUser = ({ passwordUpdate, singleData }) => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onSubmit = (values) => {\r\n    values.id = singleData;\r\n    passwordUpdate(values);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout='vertical'\r\n      name='new-company'\r\n      preserve={false}\r\n      onFinish={onSubmit}\r\n    >\r\n      <Row gutter={16}>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            name='old_password'\r\n            label={<span>Old Password</span>}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Please input Old Password`,\r\n              },\r\n            ]}\r\n          >\r\n            <Input type='password' placeholder='Old Password' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            name='password'\r\n            label={<span>Password</span>}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Please input Password`,\r\n              },\r\n            ]}\r\n          >\r\n            <Input type='password' placeholder='Password' />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Form.Item\r\n            name='confirm_password'\r\n            label={<span>Confirm Password</span>}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Please input Confirm Password`,\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(rule, value) {\r\n                  if (value) {\r\n                    if (value !== form.getFieldValue('password')) {\r\n                      return Promise.reject('Passwords does not match');\r\n                    }\r\n                    return Promise.resolve();\r\n                  } else {\r\n                    return Promise.resolve();\r\n                  }\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input type='password' placeholder='Confirm Password' />\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Form.Item className='text-right mb-0'>\r\n        <Button type='primary' htmlType='submit'>\r\n          Save\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nAddUser.propTypes = {\r\n  passwordUpdate: PropTypes.any,\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  singleData: PropTypes.any,\r\n  isErrorType: PropTypes.string,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isError: state.user.isError,\r\n  errMessage: state.user.errMessage,\r\n  isErrorType: state.user.isErrorType,\r\n  singleData: state.auth.id,\r\n});\r\nexport default connect(mapStateToProps, { passwordUpdate })(AddUser);\r\n","import { Card, Col, message, Row } from 'antd';\r\nimport React from 'react';\r\nimport EditUser from './editUser';\r\nimport EditUserPass from './editPassword';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { deleteUser, listUser } from '../../../apis/dashboard/User';\r\n\r\nconst Index = ({\r\n  data,\r\n  loading,\r\n  errMessage,\r\n  isError,\r\n  isErrorType,\r\n  isAuthenticated,\r\n  listUser,\r\n  deleteUser,\r\n}) => {\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      listUser();\r\n    }\r\n  }, [listUser, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (isError && isErrorType === 'SUCCESS') {\r\n      message.success(errMessage);\r\n    } else if (isError && isErrorType === 'FAIL') {\r\n      message.error(errMessage);\r\n    }\r\n  }, [isError, isErrorType, errMessage]);\r\n\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <Row>\r\n          <Col lg={24} className='border-bottom mt-0 pb-3'>\r\n            <h4 className='border-bottom pb-2 mb-3'>User Details</h4>\r\n            <EditUser />\r\n          </Col>\r\n          <Col lg={24} className='mt-3'>\r\n            <h4 className='border-bottom pb-2 mb-3'>Change Password</h4>\r\n            <EditUserPass />\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nIndex.propTypes = {\r\n  listUser: PropTypes.func,\r\n  deleteUser: PropTypes.func,\r\n  data: PropTypes.any,\r\n  loading: PropTypes.any,\r\n  isError: PropTypes.bool,\r\n  errMessage: PropTypes.string,\r\n  isErrorType: PropTypes.string,\r\n  isAuthenticated: PropTypes.any,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  data: state.user.data,\r\n  loading: state.user.loading,\r\n  isError: state.user.isError,\r\n  errMessage: state.user.errMessage,\r\n  isErrorType: state.user.isErrorType,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { listUser, deleteUser })(Index);\r\n"],"sourceRoot":""}